{"version":3,"sources":["components/Context.js","components/NavBar.js","components/Footer.js","components/Landing.js","components/SignUp.js","components/FicListCard.js","components/EpListCard.js","components/Account.js","components/AddFicList.js","components/AddEpsList.js","components/FicItemCard.js","components/FicListData.js","components/EpItemCard.js","components/EpListData.js","components/ForgotPassword.js","components/UpdatePassword.js","components/AdminUserCard.js","components/AdminBoard.js","components/About.js","components/App.js","index.js"],"names":["Context","createContext","NavBar","loggedIn","useContext","className","to","title","icon","faUserCircle","faUserPlus","Footer","href","faEnvelope","target","rel","faTwitter","faTumblr","faQuestionCircle","Landing","history","useHistory","setUserData","setToken","setLoggedIn","setUserFicLists","setUserEpLists","useState","email","setEmail","password","setPassword","errorMsg","setErrorMsg","useEffect","window","scrollTo","handleLogin","e","a","preventDefault","loginData","logged","method","headers","body","JSON","stringify","fetch","resp","json","data","header","get","success","localStorage","setItem","user","epsLists","ficLists","push","onSubmit","type","value","required","onChange","SignUp","username","setUsername","confirmPassword","setConfirmPassword","handleSignUp","signUpData","userData","alert","Object","values","message","FicListCard","el","setIsFicListClicked","setListInfo","onClick","listFandom","EpListCard","setIsEpListClicked","Account","token","userFicLists","userEpLists","isFicListClicked","isEpListClicked","editUsername","setEditUsername","editPassword","setEditPassword","newUsername","setNewUsername","newPassword","setNewPassword","isAccountDeleted","setIsAccountDeleted","handleEditUsername","fics","eps","newInfo","newUserData","response","handleEditPassword","deleteAccount","deletedUser","_id","request","console","log","htmlFor","placeholder","faCheck","faTimes","faUserEdit","faUnlockAlt","faTrashAlt","confirm","clear","faPowerOff","faSpinner","spin","length","map","i","key","AddFicList","setListFandom","statusAdded","setStatusAdded","handleCreateList","ficListData","listType","userId","postListData","ficList","AddEpsList","epListData","epList","FicItemCard","fic","listInfo","editInfo","setEditInfo","ficInfo","setFicInfo","newTitle","setNewTitle","newAuthor","setNewAuthor","newShip","setNewShip","newGenre","setNewGenre","newDescription","setNewDescription","newSource","setNewSource","options","request1","response1","fetchFic","handleSubmitEdit","author","ship","genre","description","source","listId","newFicData","deleteItem","deletedItem","isMobile","faPencilAlt","FicListData","isListDeleted","setIsListDeleted","editListInfo","setEditListInfo","addToList","setAddToList","setTitle","setAuthor","setShip","setGenre","setDescription","setSource","setListId","newListFandom","setNewListFandom","list","getItem","parse","handleAddItem","ficData","postFicData","handleSubmitEditList","newListInfo","newFicListData","deleteList","deletedList","removeItem","faPlus","EpItemCard","ep","newSeason","setNewSeason","newNumber","setNewNumber","newWhyFave","setNewWhyFave","season","number","whyFave","newEpData","EpListData","setSeason","setNumber","setWhyFave","unsortedEps","allListEps","setAllListEps","epData","postEpData","newEpListData","epId","fetchListEps","sort","b","seasonA","seasonB","numberA","numberB","comparison","ForgotPassword","form","setForm","sendPasswordResetEmail","axios","post","res","faCheckDouble","UpdatePassword","match","updatePassword","params","resetToken","status","AdminUserCard","setAllUsers","allUsers","setNewUserName","newRole","setNewRole","newEmail","setNewEmail","handleEditUser","role","deleteUser","users","AdminBoard","getUsers","About","scrollTop","top","behavior","hideHash","scroll","scrollIntoView","block","id","App","isAdmin","setIsAdmin","getUserData","Provider","path","exact","component","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a06bf47.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst Context = createContext(null);\r\n\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/NavBar.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NavBar = () => {\r\n    const { loggedIn } = useContext(Context);\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            { \r\n                loggedIn ?\r\n                    <div className=\"logged-in-container\">\r\n                        <div className=\"titles\">\r\n                            <NavLink to=\"/\" className=\"logo\"><h1>FanFavorite</h1></NavLink>\r\n                            <h2 className=\"h2-loggedin-out\">All your faves in one place</h2>\r\n                        </div>\r\n                        <div className=\"acc-signout-container\">\r\n                            <NavLink to=\"account\"><FontAwesomeIcon className=\"icon-acc\" title=\"account\" icon={faUserCircle} /></NavLink>\r\n                            <p className=\"acc-text\">Account</p>\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <div className=\"not-logged-container\">\r\n                        <div className=\"titles\">\r\n                            <NavLink to=\"/\" className=\"logo\"><h1>FanFavorite</h1></NavLink>\r\n                            <h2 className=\"h2-loggedin-out\">All your faves in one place</h2>\r\n                        </div>\r\n                        <div className=\"acc-signout-container\">\r\n                            <NavLink to=\"signup\"><FontAwesomeIcon className=\"icon-signup\" title=\"sign up\" icon={faUserPlus} /></NavLink>\r\n                            <p className=\"icon-text\">sign up</p>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style/Footer.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTwitter, faTumblr } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Contact:</p>\r\n            <div className=\"footer-contact\">\r\n                <a href=\"mailto: fanfavorite.100@gmail.com\"><FontAwesomeIcon className=\"icon\" title=\"email me\" icon={faEnvelope} /></a>\r\n                <a href=\"https://twitter.com/GhostLoveSc0re\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon className=\"icon\" title=\"twitter\" icon={faTwitter} />\r\n                </a>\r\n                <a href=\"https://tvfreakd.tumblr.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon className=\"icon\" title=\"tumblr\" icon={faTumblr} />\r\n                </a>\r\n            </div>\r\n            <div className=\"name-help\">\r\n                <p className=\"footer-name\">&copy;FanFavorite2020</p>\r\n                <Link to=\"/about\"><FontAwesomeIcon className=\"icon\" title=\"about\" icon={faQuestionCircle} /></Link>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/Landing.scss';\r\n\r\nconst Landing = () => {\r\n    const history = useHistory();\r\n    const { setUserData, setToken, setLoggedIn, loggedIn, setUserFicLists, setUserEpLists } = useContext(Context);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const loginData = {\r\n            email,\r\n            password\r\n        };\r\n\r\n        const logged = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n            body: JSON.stringify(loginData)\r\n        };\r\n        const resp = await fetch('/users/login', logged);\r\n        const data = await resp.json();\r\n        const header = resp.headers.get('x-auth');\r\n\r\n        if (data.success) {\r\n            localStorage.setItem('token', header);\r\n            setToken(header);\r\n            setUserData(data.user);\r\n            setUserEpLists(data.user.epsLists);\r\n            setUserFicLists(data.user.ficLists);\r\n            setLoggedIn(true);\r\n            setErrorMsg(false);\r\n            history.push(\"/account\");\r\n        } else {\r\n            setErrorMsg(true);\r\n        };\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     loggedIn && history.push(\"/account\");\r\n    // });\r\n    \r\n    return (\r\n        <div className=\"homepage-container\">\r\n            <div className=\"landing\">\r\n                <form className=\"login-form\" onSubmit={handleLogin}>\r\n                    <h2 className=\"h2-login\">Login</h2>\r\n                    <label className=\"login-label\">Email\r\n                        <input\r\n                            className=\"login-input\"\r\n                            type=\"email\"\r\n                            value={email}\r\n                            required\r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </label>\r\n                    <label className=\"login-label\">Password\r\n                        <input\r\n                            className=\"login-input\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </label>\r\n                    <p className={errorMsg ? \"signin-error show-error\" : \"signin-error\"}>Email or password incorrect</p>\r\n                    <button type=\"submit\" className=\"button sign-btn\">GO</button>\r\n                    <Link to=\"reset_password\" className=\"pass-forgot\">Forgot password?</Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/SignUp.scss';\r\n\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory();\r\n    const { setUserData, setToken, loggedIn, setLoggedIn } = useContext(Context);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password === confirmPassword) {\r\n            const signUpData = {\r\n                username,\r\n                email,\r\n                password,\r\n            };\r\n    \r\n            const userData = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(signUpData)\r\n            };\r\n\r\n            const resp = await fetch('/users', userData);\r\n            const header = resp.headers.get('x-auth');\r\n            const data = await resp.json();\r\n            if (data.success) {\r\n                localStorage.setItem('token', header);\r\n                setToken(header);\r\n                setUserData(data.user);\r\n                setLoggedIn(true);\r\n            } else {\r\n                window.alert(Object.values(data.message[0]));\r\n            };\r\n        } else {\r\n            window.alert('Password doesnn\\'t match');\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        loggedIn && history.push('/account');\r\n    });\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <form className=\"signup-form\" onSubmit={handleSignUp}>\r\n                <h2 className=\"h2-signup\">SIGN UP</h2>\r\n                <label className=\"signup-label\">Username *\r\n                    <input\r\n                        className=\"signup-input\"\r\n                        type=\"username\"\r\n                        value={username}\r\n                        required\r\n                        onChange={(e) => setUsername(e.target.value)} />\r\n                </label>\r\n                <label className=\"signup-label\">Email *\r\n                    <input\r\n                        className=\"signup-input\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        required\r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </label>\r\n                <label className=\"signup-label\">Password *\r\n                    <input\r\n                    className=\"signup-input\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    required\r\n                    onChange={(e) => setPassword(e.target.value)} />\r\n                </label>\r\n                <label className=\"signup-label\">Confirm Password *\r\n                    <input\r\n                    className=\"signup-input\"\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    required\r\n                    onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </label>\r\n                <h5 className=\"h5-signup\"> * Required fields </h5>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"button sign-btn\">GO</button>\r\n                    <Link to=\"/\" className=\"already-registered\">Already registered?</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUp;","import React, { useContext } from 'react';\r\nimport '../style/ListCard.scss';\r\nimport Context from './Context';\r\n\r\nconst FicListCard = ({ el, setIsFicListClicked }) => {\r\n    const { setListInfo } = useContext(Context);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => {\r\n                setListInfo(el);\r\n                localStorage.setItem('list-info', JSON.stringify(el));\r\n                setIsFicListClicked(true);\r\n            }} className=\"to-list\">{el.listFandom}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FicListCard;","import React, { useContext } from 'react';\r\nimport '../style/ListCard.scss';\r\nimport Context from './Context';\r\n\r\nconst EpListCard = ({ el, setIsEpListClicked }) => {\r\n    const { setListInfo } = useContext(Context);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => {\r\n                // setListInfo(el);\r\n                localStorage.setItem('list-info', JSON.stringify(el));\r\n                setIsEpListClicked(true);\r\n            }} className=\"to-list\">{el.listFandom}</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpListCard;","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/Account.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCheck, faTimes, faUserEdit, faUnlockAlt, faTrashAlt, faPowerOff } from '@fortawesome/free-solid-svg-icons';\r\nimport FicListCard from './FicListCard';\r\nimport EpListCard from './EpListCard';\r\n\r\nconst Account = () => {\r\n    const history = useHistory();\r\n    const { loggedIn, setLoggedIn, userData, setUserData, setListInfo, token, userFicLists, userEpLists } = useContext(Context);\r\n\r\n    const [isFicListClicked, setIsFicListClicked] = useState(false);\r\n    const [isEpListClicked, setIsEpListClicked] = useState(false);\r\n   \r\n    const [editUsername, setEditUsername] = useState(false);\r\n    const [editPassword, setEditPassword] = useState(false);\r\n    \r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [isAccountDeleted, setIsAccountDeleted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setListInfo('');\r\n    }, []);\r\n\r\n    const handleEditUsername = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // old data:\r\n        const { email, password, ficLists, epsLists, fics, eps } = userData;\r\n\r\n        const newInfo = {\r\n            username: newUsername,\r\n            email: email,\r\n            password: password,\r\n            ficLists: ficLists,\r\n            epsLists: epsLists,\r\n            fics: fics,\r\n            eps: eps\r\n        };\r\n\r\n        const newUserData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const response = await fetch('/users/username', newUserData);\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setEditUsername(false);\r\n        } else {\r\n            window.alert(Object.values(data.message[0]));\r\n        };\r\n    }\r\n\r\n    const handleEditPassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // old data:\r\n        const { username, email, ficLists, epsLists, fics, eps } = userData;\r\n        \r\n        if (newPassword === confirmPassword) {\r\n            const newInfo = {\r\n                username: username,\r\n                email: email,\r\n                password: newPassword,\r\n                ficLists: ficLists,\r\n                epsLists: epsLists,\r\n                fics: fics,\r\n                eps: eps\r\n            };\r\n\r\n            const newUserData = {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-auth\": token\r\n                },\r\n                body: JSON.stringify(newInfo)\r\n            };\r\n        \r\n            const response = await fetch('/users/password', newUserData);\r\n            const data = await response.json();\r\n            if (data.success) {\r\n                setUserData(data.user);\r\n                setEditPassword(false);\r\n            } else {\r\n                window.alert(Object.values(data.message[0]));\r\n            };\r\n        } else {\r\n            window.alert('Password doesn\\'t match.');\r\n        };\r\n    };\r\n\r\n    const deleteAccount = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedUser = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/users/' + userData._id, deletedUser);\r\n        const response = await request.json();\r\n        console.log(response)\r\n        if (response.success) {\r\n            setIsAccountDeleted(true);\r\n            setLoggedIn(false);\r\n        };\r\n    };\r\n\r\n    // redirect to list page\r\n    useEffect(() => {\r\n        isFicListClicked && history.push(\"/ficlist\");\r\n        isEpListClicked && history.push(\"/eplist\");\r\n        isAccountDeleted && history.push(\"/\");\r\n        (!loggedIn) && history.push(\"/\");\r\n    });\r\n\r\n    return (\r\n        <div className=\"account-container\">\r\n            <div className=\"personal-account\">\r\n                {\r\n                    editUsername ?\r\n                        <Fragment>\r\n                            <div className=\"personal-info\">\r\n                                <div className=\"greetings\">\r\n                                    <p className=\"label-name\">Hello, <span className=\"info\">{userData && userData.username}</span>!</p>\r\n                                    <p className=\"label-email\">{userData && userData.email}</p>\r\n                                </div>\r\n                                <form onSubmit={handleEditUsername} className=\"edit-username-form\">\r\n                                    <div className=\"username-labels-container\">\r\n                                        <label htmlFor=\"username\" className=\"edit-label\">\r\n                                            <input type=\"text\" placeholder=\"Edit username...\" onChange={(e) => setNewUsername(e.target.value)} />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"save-cancel-container\">\r\n                                        <button type=\"submit\" className=\"save-btn\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                        <button type=\"text\" className=\"cancel-btn\" onClick={() => setEditUsername(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                        :\r\n                        editPassword ?\r\n                        <Fragment>\r\n                            <div className=\"personal-info\">\r\n                                <div className=\"greetings\">\r\n                                    <p className=\"label-name\">Hello, <span className=\"info\">{userData && userData.username}</span>!</p>\r\n                                    <p className=\"label-email\">{userData && userData.email}</p>\r\n                                </div>\r\n                                <form onSubmit={handleEditPassword} className=\"edit-pass-form\">\r\n                                    <div className=\"password-labels-container\">\r\n                                        <label htmlFor=\"password\" className=\"edit-label\">\r\n                                            <input type=\"password\" className=\"input-pass\" placeholder=\"New password...\" onChange={(e) => setNewPassword(e.target.value)} />\r\n                                        </label>\r\n                                        <label htmlFor=\"confirmPassword\" className=\"edit-label\">\r\n                                            <input type=\"password\" className=\"input-pass\" placeholder=\"Confirm password...\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"save-cancel-container\">\r\n                                        <button type=\"submit\" className=\"save-btn\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                        <button type=\"text\" className=\"cancel-btn\" onClick={() => setEditPassword(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                        :\r\n                        <Fragment>\r\n                            {\r\n                                userData && userData.username ?\r\n                                    <div className=\"personal-info\">\r\n                                        <Fragment>\r\n                                            <div className=\"greetings\">\r\n                                                <p className=\"label-name\">Hello, <span className=\"info\">{userData && userData.username}</span>!</p>\r\n                                                <p className=\"label-email\">{userData && userData.email}</p>\r\n                                            </div>\r\n                                            <div className=\"buttons\">\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"edit username\" icon={faUserEdit} onClick={() => setEditUsername(true)} />\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"edit password\" icon={faUnlockAlt} onClick={() => setEditPassword(true)} />\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"delete account\" icon={faTrashAlt} onClick={(e) => {\r\n                                                    if (window.confirm(`Deleting your account will delete all of your lists. \\n\\nAre you sure you want to continue?`)) { localStorage.clear(); deleteAccount(e) }\r\n                                                    }} />\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"sign out\" icon={faPowerOff} onClick={() => { localStorage.clear(); setLoggedIn(false); setUserData(null); }} />\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    </div>\r\n                                :\r\n                                    <div className=\"loading-acc\">\r\n                                        <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                                    </div>\r\n                            } \r\n                        </Fragment>\r\n                }\r\n            </div>\r\n            <div className=\"personal-lists\">\r\n                <div className=\"fic-list-container\">\r\n                    <h3 className=\"lists-title\">Fan Fiction Lists</h3>\r\n                    <Link to=\"addficlist\" className=\"add-list\">+ ADD LIST</Link>\r\n                    {\r\n                        userFicLists &&\r\n                        userFicLists.length ?\r\n                            <Fragment>\r\n                                <div className=\"list-item-title\">\r\n                                    {\r\n                                        userFicLists.map((el, i) => <FicListCard className=\"list-card\" key={i} setIsFicListClicked={setIsFicListClicked} el={el} />)\r\n                                    }\r\n                                </div>\r\n                            </Fragment>\r\n                        :\r\n                        userFicLists &&\r\n                        userFicLists.length === 0 ?\r\n                            <Fragment>\r\n                                <p className=\"no-lists\">You haven't added any lists.</p>\r\n                            </Fragment>\r\n                        :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"eps-list-container\">\r\n                    <h3 className=\"lists-title\">Episodes Lists</h3>\r\n                    <Link to=\"addepslist\" className=\"add-list\">+ ADD LIST</Link>\r\n                    {\r\n                        userEpLists &&\r\n                        userEpLists.length ?\r\n                            <Fragment>\r\n                                <div className=\"list-item-title\">\r\n                                    {\r\n                                        userEpLists.map((el, i) => {\r\n                                            return (\r\n                                                <EpListCard className=\"list-card\" key={i} setIsEpListClicked={setIsEpListClicked} el={el} />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </Fragment>\r\n                        :\r\n                        userEpLists &&\r\n                        userEpLists.length === 0 ?\r\n                            <Fragment>\r\n                                <p className=\"no-lists\">You haven't added any lists.</p>\r\n                            </Fragment>\r\n                        :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/AddFicList.scss';\r\n\r\nconst AddFicList = () => {\r\n    const history = useHistory();\r\n\r\n    const { userData, setUserData, token, setListInfo} = useContext(Context);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const listType = 'fanfiction';\r\n\r\n    // route to list page after creation\r\n    const [statusAdded, setStatusAdded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleCreateList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const ficListData = {\r\n            listFandom,\r\n            listType,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postListData = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(ficListData)\r\n        };\r\n\r\n        const resp = await fetch('/ficlists', postListData);\r\n        const data = await resp.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setListInfo(data.ficList);\r\n            localStorage.setItem('list-info', JSON.stringify(data.ficList));\r\n            setStatusAdded(true);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        statusAdded && history.push(\"/ficlist\");\r\n    });\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"list-form\" onSubmit={handleCreateList}>\r\n                <h2 className=\"h2-list\">CREATE A FAN FICTION LIST</h2>\r\n                <label className=\"list-label\">Fandom *\r\n                    <input\r\n                        className=\"list-input\"\r\n                        type=\"text\"\r\n                        value={listFandom}\r\n                        required\r\n                        onChange={(e) => setListFandom(e.target.value)}\r\n                    />\r\n                </label>\r\n                <button className=\"list-btn\" type=\"submit\">CONTINUE</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFicList;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/AddFicList.scss';\r\n\r\nconst AddEpsList = () => {\r\n    const history = useHistory();\r\n\r\n    const { userData, setUserData, token, setListInfo} = useContext(Context);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const listType = 'episodes';\r\n\r\n    // route to list page after creation\r\n    const [statusAdded, setStatusAdded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        setListInfo('');\r\n    }, []);\r\n\r\n    const handleCreateList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const epListData = {\r\n            listFandom,\r\n            listType,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postListData = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(epListData)\r\n        };\r\n\r\n        const resp = await fetch('/eplists', postListData);\r\n        const data = await resp.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            localStorage.setItem('list-info', JSON.stringify(data.epList));\r\n            setStatusAdded(true);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        statusAdded && history.push(\"/eplist\");\r\n    });\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"list-form\" onSubmit={handleCreateList}>\r\n                <h2 className=\"h2-list\">CREATE AN EPISODE LIST</h2>\r\n                <label className=\"list-label\">Fandom *\r\n                    <input\r\n                        className=\"list-input\"\r\n                        type=\"text\"\r\n                        value={listFandom}\r\n                        required\r\n                        onChange={(e) => setListFandom(e.target.value)}\r\n                    />\r\n                </label>\r\n                <button className=\"list-btn\" type=\"submit\">CONTINUE</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddEpsList;\r\n","import React, { useContext, useState, Fragment, useEffect } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport '../style/ItemCard.scss';\r\nimport Context from './Context';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst FicItemCard = ({ fic }) => {\r\n    const { listInfo, setListInfo, token } = useContext(Context);\r\n\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [ficInfo, setFicInfo] = useState('');\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newAuthor, setNewAuthor] = useState('');\r\n    const [newShip, setNewShip] = useState('');\r\n    const [newGenre, setNewGenre] = useState('');\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [newSource, setNewSource] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchFic = async () => {\r\n            const options = {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-auth': token,\r\n              }\r\n            };\r\n    \r\n            const request1 = await fetch('/fanfics/' + fic, options);\r\n            const response1 = await request1.json();\r\n            if (response1.fic) {\r\n                setFicInfo(response1.fic);\r\n            };\r\n          };\r\n        fetchFic();\r\n    }, [listInfo, fic, token]);\r\n\r\n    const handleSubmitEdit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // old data:\r\n        const { title, author, ship, genre, description, source, listId } = ficInfo;\r\n\r\n        const newInfo = {\r\n            title: newTitle === '' ? title : newTitle,\r\n            author: newAuthor === '' ? author : newAuthor,\r\n            ship: newShip === '' ? ship : newShip,\r\n            genre: newGenre === '' ? genre : newGenre,\r\n            description: newDescription === '' ? description : newDescription,\r\n            source: newSource === '' ? source : newSource,\r\n            listId\r\n        };\r\n\r\n        const newFicData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const request = await fetch('/fanfics/' + fic, newFicData);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setListInfo(response.ficList);\r\n            setEditInfo(false);\r\n        };\r\n    };\r\n\r\n    const deleteItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedItem = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/fanfics/' + fic, deletedItem);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setListInfo(response.ficList);\r\n            localStorage.setItem('list-info', JSON.stringify(listInfo));\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={isMobile ? \"item-cards-container-mobile\" : \"item-cards-container-desktop\"}>\r\n            {\r\n                editInfo ?\r\n                    <Fragment>\r\n                        <div className=\"item-edit-form\">\r\n                            <form onSubmit={handleSubmitEdit} className=\"item-edit-form\">\r\n                                <div className=\"ok-cancel\">\r\n                                    <button type=\"submit\" className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                    <button className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} onClick={() => setEditInfo(false)}/></button>\r\n                                </div>\r\n                                <div className=\"form-fields\">\r\n                                    <label htmlFor=\"title\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" placeholder={ficInfo.title} onChange={(e) => setNewTitle(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"author\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" placeholder={ficInfo.author} onChange={(e) => setNewAuthor(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"ship\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" placeholder={ficInfo.ship} onChange={(e) => setNewShip(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"genre\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" placeholder={ficInfo.genre} onChange={(e) => setNewGenre(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"description\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" placeholder={ficInfo.description} onChange={(e) => setNewDescription(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"source\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" placeholder={ficInfo.source} onChange={(e) => setNewSource(e.target.value)} />\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                    :\r\n                    ficInfo ?\r\n                        <Fragment>\r\n                            <ul className=\"item-card\">\r\n                                <li className=\"item\"><span className=\"category\">Title: </span>{ficInfo.title}</li>\r\n                                <li className=\"item\"><span className=\"category\">Author: </span>{ficInfo.author}</li>\r\n                                <li className=\"item\"><span className=\"category\">Ship: </span>{ficInfo.ship}</li>\r\n                                <li className=\"item\"><span className=\"category\">Genre: </span>{ficInfo.genre}</li>\r\n                                <li className=\"item\"><span className=\"category\">Description: </span>{ficInfo.description}</li>\r\n                                <li className=\"item\"><span className=\"category\">Source: </span><a href={ficInfo.source} target='_blank' rel=\"noopener noreferrer\">Link</a></li>\r\n                            </ul>\r\n                            <div className=\"item-edit-delete\">\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteItem(e) }\r\n                                }} />\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FicItemCard;\r\n","import React, { useContext, Fragment, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/ListData.scss';\r\nimport FicItemCard from './FicItemCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst FicListData = () => {\r\n    const history = useHistory();\r\n    const { listInfo, setListInfo, userData, setUserData, token } = useContext(Context);\r\n\r\n    const [isListDeleted, setIsListDeleted] = useState(false);\r\n    const [editListInfo, setEditListInfo] = useState(false);\r\n    const [addToList, setAddToList] = useState(false);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [ship, setShip] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [source, setSource] = useState('');\r\n    const [listId, setListId] = useState('');\r\n    \r\n    const [newListFandom, setNewListFandom] = useState('');\r\n    \r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        const list = localStorage.getItem('list-info');\r\n        if (list) {\r\n            setListInfo(JSON.parse(list));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        listInfo.ficList ? setListFandom(listInfo.ficList.listFandom) : setListFandom(listInfo.listFandom);\r\n        listInfo.ficList ? setListId(listInfo.ficList._id) : setListId(listInfo._id);\r\n    }, [listInfo.ficList, listInfo.listFandom, listInfo._id]);\r\n\r\n    const handleAddItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const ficData = {\r\n            title,\r\n            author,\r\n            ship,\r\n            genre,\r\n            description,\r\n            source,\r\n            listId,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postFicData = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(ficData)\r\n        };\r\n\r\n        const resp = await fetch('/fanfics', postFicData);\r\n        const data = await resp.json();\r\n        if (data.success) {\r\n            setListInfo(data.ficList);\r\n            localStorage.setItem('list-info', JSON.stringify(data.ficList));\r\n            setAddToList(false)\r\n            setTitle('');\r\n            setAuthor('');\r\n            setShip('');\r\n            setGenre('');\r\n            setDescription('');\r\n            setSource('');\r\n        };\r\n    };\r\n\r\n    // EDIT LiST TITLE:\r\n    const handleSubmitEditList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newListInfo = {\r\n            listFandom: newListFandom === '' ? listFandom : newListFandom,\r\n            listType: \"fanfiction\",\r\n        };\r\n\r\n        const newFicListData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newListInfo)\r\n        };\r\n\r\n        const response = await fetch('/ficlists/' + listId, newFicListData);\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setListInfo(data.ficList);\r\n            setEditListInfo(false);\r\n        };\r\n    };\r\n\r\n    const deleteList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedList = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/ficlists/' + listId, deletedList);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setUserData(response.ficLists);\r\n            localStorage.removeItem('list-info');\r\n            setIsListDeleted(true);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        isListDeleted && history.push('/account');\r\n    });\r\n\r\n    return (\r\n        <div className=\"list-data-container\">\r\n            <div className=\"list-details\">\r\n                {\r\n                    listInfo && editListInfo ?\r\n                        <Fragment>\r\n                            <div className=\"list-edit-form\">\r\n                                <form onSubmit={handleSubmitEditList} className=\"list-edit-form\">\r\n                                    <div className={isMobile ? \"ok-cancel-mobile\" : \"ok-cancel\"}>\r\n                                        <button type=\"submit\" className=\"list-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                        <button className=\"list-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditListInfo(false)}/></button>\r\n                                    </div>\r\n                                    <label htmlFor=\"listFandom\" className={isMobile ? \"margin list-edit-label\" : \"list-edit-label\"}>Fandom:\r\n                                        <input type=\"text\" placeholder={listFandom} onChange={(e) => setNewListFandom(e.target.value)} />\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                    listInfo ?\r\n                        <Fragment>\r\n                            <div className={isMobile ? \"list-edit-delete-mobile\" : \"list-edit-delete\"}>\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditListInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteList(e) }\r\n                                }} />\r\n                            </div>\r\n                            <h2 className={isMobile ? \"list-h2-mobile\" : \"list-h2\"}><span className=\"list-title\">Fan Fiction List:</span> {listFandom}</h2>\r\n                        </Fragment>\r\n                        : null\r\n                }\r\n                <div className=\"list-items-container\">\r\n                    {\r\n                        listInfo.fics && (listInfo.fics.length > 0) ? \r\n                            listInfo.fics.map((fic, i) => {\r\n                                return (\r\n                                    <FicItemCard key={i} fic={fic} />\r\n                                )\r\n                            })\r\n                        :\r\n                            <p className=\"no-lists\">You haven't added any items.</p>\r\n                    }\r\n                </div>\r\n                <div className=\"add-form\">\r\n                    {\r\n                        addToList ?\r\n                        <div className=\"item-form-container\">\r\n                            <form className=\"item-form\" onSubmit={handleAddItem}>\r\n                                <h2 className=\"h2-item\">ADD TO THE LIST</h2>\r\n                                <label className=\"item-label\">Title *\r\n                                    <input className=\"item-input\" type=\"text\" value={title} required\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Author *\r\n                                    <input className=\"item-input\" type=\"text\" value={author} required\r\n                                        onChange={(e) => setAuthor(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Ship *\r\n                                    <input className=\"item-input\" type=\"text\" value={ship} required\r\n                                        onChange={(e) => setShip(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Genre\r\n                                    <input className=\"item-input\" type=\"text\" value={genre}\r\n                                        onChange={(e) => setGenre(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Description\r\n                                    <input className=\"item-input\" type=\"text\" value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Source *\r\n                                    <input className=\"item-input\" type=\"text\" value={source} required\r\n                                        onChange={(e) => setSource(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <h5 className=\"h5-item\">* Required Fields</h5>\r\n                                <div className=\"save-cancel-container\">\r\n                                        <button type=\"submit\" className=\"save-btn\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                        <button type=\"text\" className=\"cancel-btn\" onClick={() => setAddToList(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        :\r\n                        <div className=\"add-to-list\">\r\n                            <FontAwesomeIcon className=\"icon-add\" title=\"add\" icon={faPlus} onClick={() => setAddToList(true)}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n                        \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FicListData;\r\n","import React, { useContext, useState, Fragment, useEffect } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport '../style/ItemCard.scss';\r\nimport Context from './Context';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst EpItemCard = ({ ep }) => {\r\n    const { setListInfo, token } = useContext(Context);\r\n\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newSeason, setNewSeason] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [newWhyFave, setNewWhyFave] = useState('');\r\n    const [newSource, setNewSource] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleSubmitEdit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // old data:\r\n        const { listFandom, title, season, number, whyFave, source, listId } = ep;\r\n        \r\n        const newInfo = {\r\n            listFandom: listFandom,\r\n            title: newTitle === '' ? title : newTitle,\r\n            season: newSeason === '' ? season : newSeason,\r\n            number: newNumber === '' ? number : newNumber,\r\n            whyFave: newWhyFave === '' ? whyFave : newWhyFave,\r\n            source: newSource === '' ? source : newSource,\r\n            listId\r\n        };\r\n\r\n        const newEpData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const response = await fetch('/episodes/' + ep._id, newEpData);\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setListInfo(data.epList);\r\n            setEditInfo(false);\r\n            localStorage.setItem('list-info', JSON.stringify(data.epList));\r\n        };\r\n    };\r\n\r\n    const deleteItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedItem = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/episodes/' + ep._id, deletedItem);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setListInfo(response.epList);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={isMobile ? \"item-cards-container-mobile\" : \"item-cards-container-desktop\"}>\r\n            {\r\n                editInfo ?\r\n                    <Fragment>\r\n                        <div className=\"item-edit-form\">\r\n                            <form onSubmit={handleSubmitEdit} className=\"item-edit-form\">\r\n                                <div className=\"ok-cancel\">\r\n                                    <button type=\"submit\" className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                    <button className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditInfo(false)}/></button>\r\n                                </div>\r\n                                <div className=\"form-fields\">\r\n                                    <label htmlFor=\"title\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" placeholder={ep.title} onChange={(e) => setNewTitle(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"author\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" placeholder={ep.season} onChange={(e) => setNewSeason(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"ship\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" placeholder={ep.number} onChange={(e) => setNewNumber(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"genre\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" placeholder={ep.whyFave} onChange={(e) => setNewWhyFave(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"source\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" placeholder={ep.source} onChange={(e) => setNewSource(e.target.value)} />\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                    :\r\n                    ep ?\r\n                        <Fragment>\r\n                            <ul className=\"item-card\">\r\n                                <li className=\"item\"><span className=\"category\">Title: </span>{ep.title}</li>\r\n                                <li className=\"item\"><span className=\"category\">Season: </span>{ep.season}</li>\r\n                                <li className=\"item\"><span className=\"category\">Number: </span>{ep.number}</li>\r\n                                {\r\n                                    ep.whyFave ?\r\n                                        <li className=\"item\"><span className=\"category\">Why is it a fave?: </span>{ep.whyFave}</li>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    ep.source ?\r\n                                        <li className=\"item\"><span className=\"category\">Link to info: </span><a href={ep.source} target='_blank' rel=\"noopener noreferrer\">Link</a></li>\r\n                                    : null\r\n                                }\r\n                            </ul>\r\n                            <div className=\"item-edit-delete\">\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteItem(e) }\r\n                                }} />\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpItemCard;\r\n","import React, { useContext, Fragment, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/ListData.scss';\r\nimport EpItemCard from './EpItemCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst EpListData = () => {\r\n    const history = useHistory();\r\n    const { listInfo, setListInfo, userData, setUserData, token } = useContext(Context);\r\n\r\n    const [isListDeleted, setIsListDeleted] = useState(false);\r\n    const [editListInfo, setEditListInfo] = useState(false);\r\n    const [addToList, setAddToList] = useState(false);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [season, setSeason] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [whyFave, setWhyFave] = useState('');\r\n    const [source, setSource] = useState('');\r\n    const [listId, setListId] = useState('');\r\n\r\n    const [newListFandom, setNewListFandom] = useState('');\r\n\r\n    const unsortedEps = [];\r\n    const [allListEps, setAllListEps] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        const list = localStorage.getItem('list-info');\r\n        if (list) {\r\n            setListInfo(JSON.parse(list));\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        listInfo && listInfo.epList ? setListFandom(listInfo.epList.listFandom) : setListFandom(listInfo.listFandom);\r\n        listInfo && listInfo.epList ? setListId(listInfo.epList._id) : setListId(listInfo._id);\r\n    }, [listInfo.epList, listInfo.listFandom, listInfo._id]);\r\n\r\n\r\n    const handleAddItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const epData = {\r\n            title,\r\n            season,\r\n            number,\r\n            whyFave,\r\n            source,\r\n            listId,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postEpData = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(epData)\r\n        };\r\n\r\n        const resp = await fetch('/episodes', postEpData);\r\n        const data = await resp.json();\r\n        if (data.success) {\r\n            setListInfo(data.epList);\r\n            localStorage.setItem('list-info', JSON.stringify(data.epList));\r\n            setAddToList(false);\r\n            setTitle('');\r\n            setSeason('');\r\n            setNumber('');\r\n            setWhyFave('');\r\n            setSource('');\r\n        };\r\n    };\r\n\r\n    // EDIT LiST TITLE:\r\n    const handleSubmitEditList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newListInfo = {\r\n            listFandom: newListFandom === '' ? listFandom : newListFandom,\r\n            listType: \"episodes\",\r\n        };\r\n\r\n        const newEpListData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newListInfo)\r\n        };\r\n\r\n        const response = await fetch('/eplists/' + listId, newEpListData);\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setListInfo(data.epList);\r\n            setEditListInfo(false);\r\n        };\r\n    };\r\n\r\n    const deleteList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedList = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/eplists/' + listId, deletedList);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setUserData(response.user);\r\n            setListInfo(response.epList);\r\n            localStorage.removeItem('list-info');\r\n            setIsListDeleted(true);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchListEps = async () => {\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Accept': 'application/json',\r\n                  'x-auth': token\r\n                }\r\n            };\r\n    \r\n            if (listInfo.eps) {\r\n                listInfo.eps.map(async(epId) => {\r\n                    const request1 = await fetch('/episodes/' + epId, options);\r\n                    const response1 = await request1.json();\r\n                    response1.ep &&\r\n                    unsortedEps.push(response1.ep);\r\n                    setAllListEps(unsortedEps);\r\n                });\r\n            };\r\n        };\r\n        fetchListEps();\r\n    }, [listInfo]);\r\n\r\n    const compare = (a, b) => {\r\n        const seasonA = a.season;\r\n        const seasonB = b.season;\r\n        const numberA = a.number;\r\n        const numberB = b.number;\r\n        \r\n        let comparison = 0;\r\n        if (seasonA > seasonB) {\r\n            comparison = 1;\r\n        } else if (seasonA < seasonB) {\r\n            comparison = -1;\r\n        } else if (seasonA === seasonB && numberA > numberB) {\r\n            comparison = 1;\r\n        } else if (seasonA === seasonB && numberA < numberB) {\r\n            comparison = -1;\r\n        };\r\n        return comparison;\r\n    };\r\n\r\n    if (allListEps) {\r\n        allListEps.sort(compare);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     getUserData();\r\n    // }, [listInfo]);\r\n\r\n    useEffect(() => {\r\n        isListDeleted && history.push('/account');\r\n    });\r\nconsole.log(listInfo)\r\n    return (\r\n        <div className=\"list-data-container\">\r\n            <div className=\"list-details\">\r\n                {\r\n                    listInfo && editListInfo ?\r\n                        <Fragment>\r\n                            <div className=\"list-edit-form\">\r\n                                <form onSubmit={handleSubmitEditList} className=\"list-edit-form\">\r\n                                    <div className={isMobile ? \"ok-cancel-mobile\" : \"ok-cancel\"}>\r\n                                        <button type=\"submit\" className=\"list-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                        <button className=\"list-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditListInfo(false)}/></button>\r\n                                    </div>\r\n                                    <label htmlFor=\"listFandom\" className={isMobile ? \"margin list-edit-label\" : \"list-edit-label\"}>Fandom:\r\n                                        <input type=\"text\" placeholder={listFandom} onChange={(e) => setNewListFandom(e.target.value)} />\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                    listInfo ?\r\n                        <Fragment>\r\n                            <div className={isMobile ? \"list-edit-delete-mobile\" : \"list-edit-delete\"}>\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditListInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteList(e) }\r\n                                }} />\r\n                            </div>\r\n                            <h2 className={isMobile ? \"list-h2-mobile\" : \"list-h2\"}><span className=\"list-title\">Episodes List:</span> {listFandom}</h2>\r\n                        </Fragment>\r\n                        : null\r\n                }\r\n                <div className=\"list-items-container\">\r\n                    {\r\n                        listInfo.eps && (listInfo.eps.length > 0) && allListEps ? allListEps.map((ep, i) => {\r\n                                return (\r\n                                <EpItemCard key={i} ep={ep} />\r\n                            )\r\n                        })\r\n                        :\r\n                            <p className=\"no-lists\">You haven't added any items.</p>\r\n                    }\r\n                </div>\r\n                <div className=\"add-form\">\r\n                    {\r\n                        addToList ?\r\n                            <div className=\"item-form-container\">\r\n                                <form className=\"item-form\" onSubmit={handleAddItem}>\r\n                                    <h2 className=\"h2-item\">ADD TO THE LIST</h2>\r\n                                    <label className=\"item-label\">Title *\r\n                                        <input className=\"item-input\" type=\"text\" value={title} required placeholder=\"episode name...\"\r\n                                            onChange={(e) => setTitle(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Season *\r\n                                        <input className=\"item-input\" type=\"text\" value={season} required placeholder=\"season number...\"\r\n                                            onChange={(e) => setSeason(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Number *\r\n                                        <input className=\"item-input\" type=\"text\" value={number} required placeholder=\"episode number...\"\r\n                                            onChange={(e) => setNumber(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Why is it a fave?\r\n                                        <input className=\"item-input\" type=\"text\" value={whyFave} placeholder=\"to help you remember the ep...\"\r\n                                            onChange={(e) => setWhyFave(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Link to info\r\n                                        <input className=\"item-input\" type=\"text\" value={source} placeholder=\"imdb page for example...\"\r\n                                            onChange={(e) => setSource(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <h5 className=\"h5-item\">* Required Fields</h5>\r\n                                    <div className=\"save-cancel-container\">\r\n                                        <button type=\"submit\" className=\"save-btn\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                        <button type=\"text\" className=\"cancel-btn\" onClick={() => setAddToList(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        :\r\n                            <div className=\"add-to-list\">\r\n                                <FontAwesomeIcon className=\"icon-add\" title=\"add\" icon={faPlus} onClick={() => setAddToList(true)}/>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n                        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EpListData;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../style/ForgotPassword.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCheckDouble } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [form, setForm] = useState(1);\r\n    const [email, setEmail] = useState('');\r\n\r\n    const sendPasswordResetEmail = async (e) => {\r\n        e.preventDefault();\r\n        setForm(2);\r\n\r\n        try {\r\n            const res = await axios.post('https://fanfavorite.herokuapp.com/reset_password/user/' + email, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            });\r\n            console.log(res);\r\n            if (res.data.success) {\r\n                setForm(3);\r\n            } else {\r\n                alert('Sorry, there was an issue sending the reset email. Please try again later.');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log('this is the error: ', err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"forgotpassword\">\r\n            {\r\n                form === 3 ?\r\n                    <p className=\"submitted\"><FontAwesomeIcon icon={faCheckDouble} className=\"check-icon\" />Email sent!</p>\r\n                :\r\n                form === 2 ?\r\n                    <div className=\"loading-message\">\r\n                        <p><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /> Sending email...</p>\r\n                    </div>\r\n                :\r\n                    <form className=\"reset-form\" onSubmit={sendPasswordResetEmail}>\r\n                        <label className=\"reset-pass-label\">\r\n                            <input\r\n                                className=\"reset-input\"\r\n                                type=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                placeholder=\"Account's email address\"\r\n                            />\r\n                        </label>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"reset-btn\" >SEND</button>\r\n                    </form>\r\n            }\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../style/UpdatePassword.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCheckDouble } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst UpdatePassword = ({ match }) => {\r\n    const SERVER_URI = \"https://fanfavorite.herokuapp.com\";\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [form, setForm] = useState(1);\r\n\r\n    const updatePassword = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { userId, resetToken } = match.params;\r\n        if (password === confirmPassword && password.length >= 6) {\r\n            setForm(2);\r\n            try {\r\n                const res = await axios.post(`${SERVER_URI}/reset_password/receive_new_password/${userId}/${resetToken}`, {\r\n                    password,\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    }\r\n                });\r\n                console.log(res);\r\n                if (res.status) {\r\n                    setForm(3);\r\n                } else {\r\n                    alert('Sorry, there was an issue updating your password. Please make sure it is longer than 6 characters or try again later.');\r\n                };\r\n    \r\n            } catch (err) {\r\n                console.log('this is the error: ', err)\r\n            };\r\n        } else {\r\n            window.alert('Password doesn\\'t match or is shorter than 6 characters');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"update-password\">\r\n            {\r\n                form === 3 ?\r\n                    <p className=\"submitted\"><FontAwesomeIcon icon={faCheckDouble} className=\"check-icon\" />Password updated! <br/>Please login with your new password.</p>\r\n                :\r\n                form === 2 ?\r\n                    <div className=\"loading-message\">\r\n                        <p><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /> Updating password...</p>\r\n                    </div>\r\n                :\r\n                    <form className=\"update-form\" onSubmit={updatePassword}>\r\n                        <label className=\"update-pass-label\">\r\n                            <input\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                placeholder=\"New password...\"\r\n                            />\r\n                        </label>\r\n                        <label className=\"update-pass-label\">\r\n                            <input\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                placeholder=\"Retype password...\"\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\" className=\"update-btn\">SEND</button>\r\n                    </form>\r\n            }\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePassword;","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport '../style/AdminBoard.scss';\r\nimport Context from './Context';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AdminUserCard = ({ el, allUsers, setAllUsers }) => {\r\n    const { token } = useContext(Context);\r\n\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [newUsername, setNewUserName] = useState('');\r\n    const [newRole, setNewRole] = useState('');\r\n    const [newEmail, setNewEmail] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleEditUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { username, role, email, password, _id } = el;\r\n\r\n        const newInfo = {\r\n            username: newUsername === '' ? username : newUsername,\r\n            role: newRole === '' ? role : newRole,\r\n            email: newEmail === '' ? email : newEmail,\r\n            password: newPassword === '' ? password : newPassword,\r\n        };\r\n\r\n        const newUserData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const request = await fetch('/admin/' + _id, newUserData);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setEditInfo(false);\r\n        };\r\n    };\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { _id } = el;\r\n\r\n        const deletedUser = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/admin/' + _id, deletedUser);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setAllUsers(response.users);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"users-cards-container\">\r\n            {\r\n                editInfo ?\r\n                    <Fragment>\r\n                        <div className=\"item-edit-form\">\r\n                            <form onSubmit={handleEditUser} className=\"item-edit-form\">\r\n                                <label htmlFor=\"username\" className=\"item-edit-label item-edit-label-info\">\r\n                                    <input type=\"text\" placeholder={el.username} onChange={(e) => setNewUserName(e.target.value)} />\r\n                                </label>\r\n                                <label htmlFor=\"role\" className=\"item-edit-label item-edit-label-info\">\r\n                                    <input type=\"text\" placeholder={el.role} onChange={(e) => setNewRole(e.target.value)} />\r\n                                </label>\r\n                                <label htmlFor=\"email\" className=\"item-edit-label item-edit-label-info\">\r\n                                    <input type=\"email\" placeholder={el.email} onChange={(e) => setNewEmail(e.target.value)} />\r\n                                </label>\r\n                                <label htmlFor=\"password\" className=\"item-edit-label item-edit-label-info\">\r\n                                    <input type=\"password\" placeholder=\"password\" onChange={(e) => setNewPassword(e.target.value)} />\r\n                                </label>\r\n                                <div className=\"ok-cancel\">\r\n                                    <button type=\"submit\" className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                    <button className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditInfo(false)}/></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                    :\r\n                    <Fragment>\r\n                        <ul className=\"item-card\">\r\n                            <li className=\"item\"><span className=\"category\">Username: </span>{el.username}</li>\r\n                            <li className=\"item\"><span className=\"category\">Role: </span>{el.role}</li>\r\n                            <li className=\"item\"><span className=\"category\">Email: </span>{el.email}</li>\r\n                            <li className=\"item\"><span className=\"category\">Password: </span>...</li>\r\n                            </ul>\r\n                        <div className=\"item-edit-delete\">\r\n                            <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                            <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteUser(e) }\r\n                            }} />\r\n                        </div>\r\n                    </Fragment>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n    // const { setListInfo } = useContext(Context);\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <button onClick={() => {\r\n    //             setListInfo(el);\r\n    //             localStorage.setItem('list-info', JSON.stringify(el));\r\n    //             setIsFicListClicked(true);\r\n    //         }} className=\"to-list\">{el.fandom}</button>\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default AdminUserCard;","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport Context from './Context';\r\nimport '../style/AdminBoard.scss';\r\nimport AdminUserCard from './AdminUserCard';\r\n\r\nconst AdminBoard = () => {\r\n    const { token } = useContext(Context);\r\n\r\n    const [allUsers, setAllUsers] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     getUsers();\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            const options = {\r\n              method: 'GET',\r\n              headers: {\r\n                'x-auth': token,\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n              }\r\n            };\r\n        \r\n            const response = await fetch('/admin', options);\r\n            const data = await response.json();\r\n            setAllUsers(data.users);\r\n          };\r\n        getUsers();\r\n    }, [token]);\r\n    \r\n    return (\r\n        <div className=\"admin-board\">\r\n            <div className=\"board-container\">\r\n                <h3 className=\"board-title\">USERS:</h3>\r\n                <div className=\"users-list\">\r\n                {\r\n                    allUsers &&\r\n                    allUsers.length ?\r\n                        <Fragment>\r\n                            {\r\n                                allUsers.map((el, i) => <AdminUserCard className=\"user-card\" key={i} el={el} allUsers={allUsers} setAllUsers={setAllUsers} />)\r\n                            }\r\n                        </Fragment>\r\n                    : null\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminBoard;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport '../style/About.scss';\r\n\r\nconst About = () => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n    \r\n    const scrollTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const hideHash = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"about-container\">\r\n            <div className=\"theme-list\">\r\n                <ul>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#whatisfanfavorite\">What is FanFavorite?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#howtocreatelists\">How to create lists?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#howtocreateaccount\">How to create an account?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#editpersonalinfo\">Can I edit my personal info?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#deleteaccount\">What happens when I delete my account?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#timetostart\">Why does it take time to initially load?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#suggestions\">Can I suggest changes for FanFavorite?</HashLink></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"questions-container\">\r\n                <div className=\"questions-headline\">\r\n                    <h3>FANFAVORITE IS HERE</h3>\r\n                    <h3>FOR ANY QUESTIONS</h3>\r\n                    <h3>YOU MIGHT HAVE</h3>\r\n                    <h5>IF YOU CAN'T FIND IT HERE, FEEL FREE TO MAKE A DIRECT \r\n                        <HashLink to=\"#footer\" className=\"contact\" scroll={el => el.scrollIntoView({ behavior: 'smooth', block: 'start' })} onClick={hideHash}>\r\n                            CONTACT</HashLink></h5>\r\n                </div>\r\n                <div className=\"questions\">\r\n                    <div id=\"whatisfanfavorite\">\r\n                        <h4>WHAT IS FANFAVORITE?</h4>\r\n                        <p>\r\n                            FanFavorite is a web app created by and for fans who would like to keep all of their favorite fan fiction and episodes in one place, so they're never lost. It started as a small idea for a project to be presented in a portfolio, and grew to be FanFavorite.\r\n                        </p>\r\n                        <p>\r\n                            With FanFavorite you wont need to save endless links in your browser. Now it is possible to keep them all in one list, with exact description to make it easy for you to remember them.\r\n                        </p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"howtocreatelists\">\r\n                        <h4>HOW TO CREATE A LIST?</h4>\r\n                        <ol>\r\n                            <li>1. <Link to=\"signup\">Sign up</Link> with your own account (see next question).</li>\r\n                            <li>2. Click on ADD LIST in the desired category (fan fiction or episodes).</li>\r\n                            <li>3. Give the list the name of the fandom it belongs to.</li>\r\n                            <li>3. Once list is created, use the form to add items to it.</li>\r\n                            <li>4. You can edit or delete the items and the lists (the info will be permanently changed/deleted).</li>\r\n                            <li>Once you go back to your account's page, you'll be able to see your lists.</li>\r\n                        </ol>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"howtocreateaccount\">\r\n                        <h4>HOW TO CREATE AN ACCOUNT?</h4>\r\n                        <ol>\r\n                            <li>1. Click on the top navigation bar on 'Sign up'.</li>\r\n                            <li>2. Fill in all the required fields.</li>\r\n                            <li>3. Click on 'GO'.</li>\r\n                            <li>You can edit your info from your account.</li>\r\n                        </ol>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"editpersonalinfo\">\r\n                        <h4>CAN I EDIT MY PERSONAL INFO?</h4>\r\n                        <p>You can edit your username and password. This is how:</p>\r\n                        <ol>\r\n                            <li>1. Once you're logged in, make sure you're on your account's page.</li>\r\n                            <li>2. In the top toolbar click 'EDIT USERNAME' or 'EDIT PASSWORD'.</li>\r\n                            <li>3. Click on the check mark to approve, or on the 'x' to cancel editing.</li>\r\n                            <li><strong>* The 'DELETE ACCOUNT' and 'SIGN OUT' buttons are also in the top toolbar.</strong></li>\r\n                        </ol>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"deleteaccount\">\r\n                        <h4>WHAT HAPPENS WHEN I DELETE MY ACCOUNT?</h4>\r\n                        <p>Deleting your account will permanently delete all of your info and lists, so please make sure it's really what you want.</p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"timetostart\">\r\n                        <h4>WHY DOES IT TAKE TIME FOR THE WEB APP TO INITIALLY LOAD?</h4>\r\n                        <p>The app is currently hosted on a free server. Without going into technical details - the server needs about 30 seconds to 'wake up'. Afterwards, it will work without delays.</p>\r\n                        <p>Please note that the 'waking up' will happen each time after a certain amount of inactive time.</p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"suggestions\">\r\n                        <h4>CAN I SUGGEST CHANGES FOR FANFAVORITE?</h4>\r\n                        <p>Of course! This web app is for you.</p>\r\n                        <p>If you think of a way to improve it, please let me know.</p>\r\n                        <p>It would also be much appreciated if you notify me about any bugs you might find.</p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"../style/App.scss\";\r\nimport Context from \"./Context\";\r\nimport NavBar from \"./NavBar\";\r\nimport Footer from \"./Footer\";\r\nimport Landing from \"./Landing\";\r\nimport SignUp from \"./SignUp\";\r\nimport Account from \"./Account\";\r\nimport AddFicList from \"./AddFicList\";\r\nimport AddEpsList from \"./AddEpsList\";\r\nimport FicListData from \"./FicListData.js\"\r\nimport EpListData from \"./EpListData.js\"\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport UpdatePassword from \"./UpdatePassword\";\r\nimport AdminBoard from \"./AdminBoard\";\r\nimport About from \"./About\";\r\n\r\nconst App = () => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [userFicLists, setUserFicLists] = useState('');\r\n  const [userEpLists, setUserEpLists] = useState('');\r\n  const [listInfo, setListInfo] = useState('');\r\n  const [userData, setUserData] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  \r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // FETCH USER INFO:\r\n  const getUserData = async () => {\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-auth': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    };\r\n\r\n    const response = await fetch('/users', options);\r\n    const data = await response.json();\r\n    console.log(data)\r\n    if (data.success) {\r\n      setUserData(data.user);\r\n      setUserEpLists(data.user.epsLists);\r\n      setUserFicLists(data.user.ficLists);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUserData();\r\n      setLoggedIn(true);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n        getUserData();\r\n    }, [listInfo]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Context.Provider value={{ getUserData, userFicLists, setUserFicLists, userEpLists, setUserEpLists, listInfo, setListInfo, userData, setUserData, token, setToken, isAdmin, setIsAdmin, loggedIn, setLoggedIn }}>\r\n        <HashRouter>\r\n          <NavBar />\r\n          <Switch>\r\n            {\r\n              loggedIn ?\r\n                <Route path=\"/\" exact component={Account} />\r\n              :\r\n                <Route path=\"/\" exact component={Landing} />\r\n            }\r\n            <Route path=\"/account\" exact component={Account} /> \r\n            <Route path=\"/signup\" exact component={SignUp} />\r\n            <Route path=\"/admin\" exact component={AdminBoard} />\r\n            <Route path=\"/addficlist\" exact component={AddFicList} />\r\n            <Route path=\"/addepslist\" exact component={AddEpsList} />\r\n            <Route path=\"/ficlist\" exact component={FicListData} />\r\n            <Route path=\"/eplist\" exact component={EpListData} />\r\n            <Route path=\"/about\" exact component={About} />\r\n            <Route path=\"/reset_password\" exact component={ForgotPassword} />\r\n            <Route path=\"/password/reset/:userId/:resetToken\" exact component={UpdatePassword} />\r\n          </Switch>\r\n          <div id=\"footer\">\r\n            <Footer />\r\n          </div>\r\n        </HashRouter>\r\n      </Context.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","\nimport React from \"react\"\nimport App from \"./components/App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}