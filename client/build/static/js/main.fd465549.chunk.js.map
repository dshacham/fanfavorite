{"version":3,"sources":["components/Context.js","components/NavBar.js","components/Footer.js","components/Landing.js","components/SignUp.js","components/FicListCard.js","components/EpListCard.js","components/Account.js","components/AddFicList.js","components/AddEpsList.js","components/FicItemCard.js","components/FicListData.js","components/EpItemCard.js","components/EpListData.js","components/ForgotPassword.js","components/UpdatePassword.js","components/AdminUserCard.js","components/AdminBoard.js","components/About.js","components/App.js","index.js"],"names":["Context","createContext","NavBar","loggedIn","useContext","className","to","title","icon","faUserCircle","faUserPlus","Footer","onClick","window","scrollTo","top","behavior","faAngleDoubleUp","href","faEnvelope","target","rel","faTwitter","faTumblr","faQuestionCircle","Landing","history","useHistory","setUserData","setToken","setLoggedIn","setUserFicLists","setUserEpLists","useState","email","setEmail","password","setPassword","errorMsg","setErrorMsg","isButtonClicked","setIsButtonClicked","useEffect","handleLogin","e","a","preventDefault","loginData","logged","method","headers","body","JSON","stringify","fetch","resp","json","data","header","get","success","localStorage","setItem","user","epsLists","ficLists","push","isMobile","onSubmit","type","value","required","onChange","faSpinner","spin","SignUp","username","setUsername","confirmPassword","setConfirmPassword","handleSignUp","signUpData","userData","alert","Object","values","message","FicListCard","el","setIsFicListClicked","setListInfo","listFandom","EpListCard","setIsEpListClicked","Account","getUserData","token","userFicLists","userEpLists","isFicListClicked","isEpListClicked","editUsername","setEditUsername","editPassword","setEditPassword","newUsername","setNewUsername","newPassword","setNewPassword","isAccountDeleted","setIsAccountDeleted","handleEditUsername","fics","eps","newInfo","newUserData","response","handleEditPassword","deleteAccount","deletedUser","_id","request","console","log","htmlFor","placeholder","faCheck","faTimes","faUserEdit","faUnlockAlt","faTrashAlt","confirm","clear","faPowerOff","length","map","i","key","AddFicList","setListFandom","statusAdded","setStatusAdded","handleCreateList","ficListData","listType","userId","postListData","ficList","AddEpsList","epListData","epList","FicItemCard","fic","listInfo","ficInfo","setFicInfo","author","ship","genre","description","source","listId","newTitle","setNewTitle","newAuthor","setNewAuthor","newShip","setNewShip","newGenre","setNewGenre","newDescription","setNewDescription","newSource","setNewSource","editInfo","setEditInfo","isListExpended","setIsListExpended","options","request1","response1","fetchFic","handleSubmitEdit","newFicData","deleteItem","deletedItem","faChevronUp","faChevronDown","faPencilAlt","FicListData","isListDeleted","setIsListDeleted","editListInfo","setEditListInfo","addToList","setAddToList","isAddButtonClicked","setIsAddButtonClicked","setTitle","setAuthor","setShip","setGenre","setDescription","setSource","setListId","newListFandom","setNewListFandom","list","getItem","parse","handleAddItem","ficData","postFicData","handleSubmitEditList","newListInfo","newFicListData","deleteList","deletedList","removeItem","faPlus","id","EpItemCard","ep","season","number","whyFave","newSeason","setNewSeason","newNumber","setNewNumber","newWhyFave","setNewWhyFave","newEpData","EpListData","setSeason","setNumber","setWhyFave","unsortedEps","allListEps","setAllListEps","epId","fetchListEps","sort","b","seasonA","seasonB","numberA","numberB","comparison","epData","postEpData","newEpListData","ForgotPassword","form","setForm","sendPasswordResetEmail","axios","post","res","faCheckDouble","UpdatePassword","match","updatePassword","params","resetToken","status","AdminUserCard","setAllUsers","allUsers","role","setNewUserName","newRole","setNewRole","newEmail","setNewEmail","handleEditUser","users","deleteUser","AdminBoard","getUsers","About","scrollTop","hideHash","scroll","scrollIntoView","block","App","isAdmin","setIsAdmin","Provider","path","exact","component","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd465549.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst Context = createContext(null);\r\n\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/NavBar.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NavBar = () => {\r\n    const { loggedIn } = useContext(Context);\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            { \r\n                loggedIn ?\r\n                    <div className=\"logged-in-container\">\r\n                        <div className=\"titles\">\r\n                            <NavLink to=\"/\" className=\"logo\"><h1>FanFavorite</h1></NavLink>\r\n                            <h2 className=\"h2-loggedin-out\">All your faves in one place</h2>\r\n                        </div>\r\n                        <div className=\"acc-signout-container\">\r\n                            <NavLink to=\"account\"><FontAwesomeIcon className=\"icon-acc\" title=\"account\" icon={faUserCircle} /></NavLink>\r\n                            <p className=\"acc-text\">Account</p>\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <div className=\"not-logged-container\">\r\n                        <div className=\"titles\">\r\n                            <NavLink to=\"/\" className=\"logo\"><h1>FanFavorite</h1></NavLink>\r\n                            <h2 className=\"h2-loggedin-out\">All your faves in one place</h2>\r\n                        </div>\r\n                        <div className=\"acc-signout-container\">\r\n                            <NavLink to=\"signup\"><FontAwesomeIcon className=\"icon-signup\" title=\"sign up\" icon={faUserPlus} /></NavLink>\r\n                            <p className=\"icon-text\">sign up</p>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style/Footer.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faQuestionCircle, faAngleDoubleUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTwitter, faTumblr } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n    const scrollTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    return (\r\n        <footer>\r\n            <div className=\"to-top\">\r\n                <button className=\"to-top-btn\" onClick={scrollTop}>\r\n                    <FontAwesomeIcon className=\"icon-top\" title=\"back to top\" icon={faAngleDoubleUp} />\r\n                </button>\r\n            </div>\r\n            <div className=\"footer-contact\">\r\n                <a href=\"mailto: fanfavorite.100@gmail.com\"><FontAwesomeIcon className=\"icon\" title=\"email me\" icon={faEnvelope} /></a>\r\n                <a href=\"https://twitter.com/GhostLoveSc0re\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon className=\"icon\" title=\"twitter\" icon={faTwitter} />\r\n                </a>\r\n                <a href=\"https://tvfreakd.tumblr.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon className=\"icon\" title=\"tumblr\" icon={faTumblr} />\r\n                </a>\r\n                <p className=\"footer-name\">&copy;FanFavorite2020</p>\r\n            </div>\r\n            <div className=\"about-icon\">\r\n                <Link to=\"/about\">\r\n                    <FontAwesomeIcon className=\"icon\" title=\"about\" icon={faQuestionCircle} />\r\n                </Link>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/Landing.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Landing = () => {\r\n    const history = useHistory();\r\n    const { setUserData, setToken, setLoggedIn, loggedIn, setUserFicLists, setUserEpLists } = useContext(Context);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const loginData = {\r\n            email,\r\n            password\r\n        };\r\n\r\n        const logged = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n            body: JSON.stringify(loginData)\r\n        };\r\n        const resp = await fetch('/users/login', logged);\r\n        const data = await resp.json();\r\n        const header = resp.headers.get('x-auth');\r\n\r\n        if (data.success) {\r\n            localStorage.setItem('token', header);\r\n            setToken(header);\r\n            setUserData(data.user);\r\n            setUserEpLists(data.user.epsLists);\r\n            setUserFicLists(data.user.ficLists);\r\n            setLoggedIn(true);\r\n            setErrorMsg(false);\r\n            history.push(\"/account\");\r\n        } else {\r\n            setErrorMsg(true);\r\n        };\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     loggedIn && history.push(\"/account\");\r\n    // });\r\n    \r\n    return (\r\n        <div className={isMobile ? \"homepage-container\" : \"homepage-container desktop-margin\"}>\r\n            <div className={isMobile ? \"landing mobile-width\" : \"landing\"}>\r\n                <form className=\"login-form\" onSubmit={handleLogin}>\r\n                    <h2 className=\"h2-login\">LOGIN</h2>\r\n                    <label className=\"login-label\">Email\r\n                        <input\r\n                            className=\"login-input\"\r\n                            type=\"email\"\r\n                            value={email}\r\n                            required\r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </label>\r\n                    <label className=\"login-label\">Password\r\n                        <input\r\n                            className=\"login-input\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            required\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </label>\r\n                    <p className={errorMsg ? \"signin-error show-error\" : \"signin-error\"}>Email or password incorrect</p>\r\n                    {\r\n                    isButtonClicked && !errorMsg ?\r\n                        <button className=\"sign-btn\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /></button>\r\n                    :\r\n                        <button className=\"sign-btn\" type=\"submit\" onClick={() => {setIsButtonClicked(true); setErrorMsg(false)}}>GO</button>\r\n                    }\r\n                    <Link to=\"reset_password\" className=\"pass-forgot\">Forgot password?</Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/SignUp.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory();\r\n    const { setUserData, setToken, loggedIn, setLoggedIn } = useContext(Context);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password === confirmPassword) {\r\n            const signUpData = {\r\n                username,\r\n                email,\r\n                password,\r\n            };\r\n    \r\n            const userData = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(signUpData)\r\n            };\r\n\r\n            const resp = await fetch('/users', userData);\r\n            const header = resp.headers.get('x-auth');\r\n            const data = await resp.json();\r\n            if (data.success) {\r\n                localStorage.setItem('token', header);\r\n                setToken(header);\r\n                setUserData(data.user);\r\n                setLoggedIn(true);\r\n                setIsButtonClicked(false);\r\n            } else {\r\n                window.alert(Object.values(data.message[0]));\r\n                setIsButtonClicked(false);\r\n            };\r\n        } else {\r\n            window.alert('Password doesnn\\'t match');\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        loggedIn && history.push('/account');\r\n    });\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <form className={isMobile ? \"signup-form mobile-width\" : \"signup-form\"} onSubmit={handleSignUp}>\r\n                <h2 className=\"h2-signup\">SIGN UP</h2>\r\n                <label className=\"signup-label\">Username *\r\n                    <input\r\n                        className=\"signup-input\"\r\n                        type=\"username\"\r\n                        value={username}\r\n                        required\r\n                        onChange={(e) => setUsername(e.target.value)} />\r\n                </label>\r\n                <label className=\"signup-label\">Email *\r\n                    <input\r\n                        className=\"signup-input\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        required\r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </label>\r\n                <label className=\"signup-label\">Password *\r\n                    <input\r\n                    className=\"signup-input\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    required\r\n                    onChange={(e) => setPassword(e.target.value)} />\r\n                </label>\r\n                <label className=\"signup-label\">Confirm Password *\r\n                    <input\r\n                    className=\"signup-input\"\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    required\r\n                    onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </label>\r\n                <h5 className=\"h5-signup\"> * Required fields </h5>\r\n                {\r\n                    isButtonClicked ?\r\n                        <button className=\"sign-btn\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /></button>\r\n                    :\r\n                        <button className=\"sign-btn\" type=\"submit\" onClick={() => setIsButtonClicked(true)}>GO</button>\r\n                }\r\n                <Link to=\"/\" className=\"already-registered\">Already registered?</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUp;","import React, { useContext } from 'react';\r\nimport '../style/ListCard.scss';\r\nimport Context from './Context';\r\n\r\nconst FicListCard = ({ el, setIsFicListClicked }) => {\r\n    const { setListInfo } = useContext(Context);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => {\r\n                setListInfo(el);\r\n                localStorage.setItem('list-info', JSON.stringify(el));\r\n                setIsFicListClicked(true);\r\n            }} className=\"to-list\">{el.listFandom}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FicListCard;","import React, { useContext } from 'react';\r\nimport '../style/ListCard.scss';\r\nimport Context from './Context';\r\n\r\nconst EpListCard = ({ el, setIsEpListClicked }) => {\r\n    const { setListInfo } = useContext(Context);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => {\r\n                // setListInfo(el);\r\n                localStorage.setItem('list-info', JSON.stringify(el));\r\n                setIsEpListClicked(true);\r\n            }} className=\"to-list\">{el.listFandom}</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpListCard;","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport Context from './Context';\r\nimport '../style/Account.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCheck, faTimes, faUserEdit, faUnlockAlt, faTrashAlt, faPowerOff } from '@fortawesome/free-solid-svg-icons';\r\nimport FicListCard from './FicListCard';\r\nimport EpListCard from './EpListCard';\r\n\r\nconst Account = () => {\r\n    const history = useHistory();\r\n    const { loggedIn, setLoggedIn, userData, setUserData, getUserData, setListInfo, token, userFicLists, userEpLists } = useContext(Context);\r\n\r\n    const [isFicListClicked, setIsFicListClicked] = useState(false);\r\n    const [isEpListClicked, setIsEpListClicked] = useState(false);\r\n   \r\n    const [editUsername, setEditUsername] = useState(false);\r\n    const [editPassword, setEditPassword] = useState(false);\r\n    \r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n    const [isAccountDeleted, setIsAccountDeleted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        setListInfo('');\r\n        getUserData();\r\n    }, []);\r\n\r\n    const handleEditUsername = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // old data:\r\n        const { email, password, ficLists, epsLists, fics, eps } = userData;\r\n\r\n        const newInfo = {\r\n            username: newUsername,\r\n            email: email,\r\n            password: password,\r\n            ficLists: ficLists,\r\n            epsLists: epsLists,\r\n            fics: fics,\r\n            eps: eps\r\n        };\r\n\r\n        const newUserData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const response = await fetch('/users/username', newUserData);\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setEditUsername(false);\r\n            setIsButtonClicked(false);\r\n        } else {\r\n            window.alert(Object.values(data.message[0]));\r\n            setIsButtonClicked(false);\r\n        };\r\n    }\r\n\r\n    const handleEditPassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // old data:\r\n        const { username, email, ficLists, epsLists, fics, eps } = userData;\r\n        \r\n        if (newPassword === confirmPassword) {\r\n            const newInfo = {\r\n                username: username,\r\n                email: email,\r\n                password: newPassword,\r\n                ficLists: ficLists,\r\n                epsLists: epsLists,\r\n                fics: fics,\r\n                eps: eps\r\n            };\r\n\r\n            const newUserData = {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-auth\": token\r\n                },\r\n                body: JSON.stringify(newInfo)\r\n            };\r\n        \r\n            const response = await fetch('/users/password', newUserData);\r\n            const data = await response.json();\r\n            if (data.success) {\r\n                setUserData(data.user);\r\n                setEditPassword(false);\r\n                setIsButtonClicked(false);\r\n            } else {\r\n                window.alert(Object.values(data.message[0]));\r\n                setIsButtonClicked(false);\r\n            };\r\n        } else {\r\n            window.alert('Password doesn\\'t match.');\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    const deleteAccount = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedUser = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/users/' + userData._id, deletedUser);\r\n        const response = await request.json();\r\n        console.log(response)\r\n        if (response.success) {\r\n            setIsAccountDeleted(true);\r\n            setLoggedIn(false);\r\n        };\r\n    };\r\n\r\n    // redirect to list page\r\n    useEffect(() => {\r\n        isFicListClicked && history.push(\"/ficlist\");\r\n        isEpListClicked && history.push(\"/eplist\");\r\n        isAccountDeleted && history.push(\"/\");\r\n        (!loggedIn) && history.push(\"/\");\r\n    });\r\n\r\n    return (\r\n        <div className=\"account-container\">\r\n            <div className=\"personal-account\">\r\n                {\r\n                    editUsername ?\r\n                        <Fragment>\r\n                            <div className=\"personal-info\">\r\n                                <div className=\"greetings\">\r\n                                    <p className=\"label-name\">Hi, <span className=\"info\">{userData && userData.username}</span>!</p>\r\n                                    <p className=\"label-email\">{userData && userData.email}</p>\r\n                                </div>\r\n                                <form onSubmit={handleEditUsername} className=\"edit-username-form\">\r\n                                    <div className=\"username-labels-container\">\r\n                                        <label htmlFor=\"username\" className=\"edit-label\">\r\n                                            <input type=\"text\" placeholder=\"Edit username...\" onChange={(e) => setNewUsername(e.target.value)} />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"save-cancel-container\">\r\n                                        {\r\n                                            isButtonClicked ?\r\n                                                <button className=\"save-btn-spin\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                            :\r\n                                                <button type=\"submit\" className=\"save-btn\" onClick={() => setIsButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                        }\r\n                                        <button type=\"text\" className=\"cancel-btn\" onClick={() => setEditUsername(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                        :\r\n                        editPassword ?\r\n                        <Fragment>\r\n                            <div className=\"personal-info\">\r\n                                <div className=\"greetings\">\r\n                                    <p className=\"label-name\">Hi, <span className=\"info\">{userData && userData.username}</span>!</p>\r\n                                    <p className=\"label-email\">{userData && userData.email}</p>\r\n                                </div>\r\n                                <form onSubmit={handleEditPassword} className=\"edit-pass-form\">\r\n                                    <div className=\"password-labels-container\">\r\n                                        <label htmlFor=\"password\" className=\"edit-label\">\r\n                                            <input type=\"password\" className=\"input-pass\" placeholder=\"New password...\" onChange={(e) => setNewPassword(e.target.value)} />\r\n                                        </label>\r\n                                        <label htmlFor=\"confirmPassword\" className=\"edit-label\">\r\n                                            <input type=\"password\" className=\"input-pass\" placeholder=\"Confirm password...\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"save-cancel-container\">\r\n                                        {\r\n                                            isButtonClicked ?\r\n                                                <button className=\"save-btn-spin\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                            :\r\n                                                <button type=\"submit\" className=\"save-btn\" onClick={() => setIsButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                        }\r\n                                        <button type=\"text\" className=\"cancel-btn\" onClick={() => setEditPassword(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                        :\r\n                        <Fragment>\r\n                            {\r\n                                userData && userData.username ?\r\n                                    <div className=\"personal-info\">\r\n                                        <Fragment>\r\n                                            <div className=\"greetings\">\r\n                                                <p className=\"label-name\">Hi, <span className=\"info\">{userData && userData.username}</span>!</p>\r\n                                                <p className=\"label-email\">{userData && userData.email}</p>\r\n                                            </div>\r\n                                            <div className=\"buttons\">\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"edit username\" icon={faUserEdit} onClick={() => setEditUsername(true)} />\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"edit password\" icon={faUnlockAlt} onClick={() => setEditPassword(true)} />\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"delete account\" icon={faTrashAlt} onClick={(e) => {\r\n                                                    if (window.confirm(`Deleting your account will delete all of your lists. \\n\\nAre you sure you want to continue?`)) { localStorage.clear(); deleteAccount(e) }\r\n                                                    }} />\r\n                                                <FontAwesomeIcon className=\"icon-account\" title=\"sign out\" icon={faPowerOff} onClick={() => { localStorage.clear(); setLoggedIn(false); setUserData(null); }} />\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    </div>\r\n                                :\r\n                                    <div className=\"loading-acc\">\r\n                                        <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                                    </div>\r\n                            } \r\n                        </Fragment>\r\n                }\r\n            </div>\r\n            <div className=\"personal-lists\">\r\n                <div className=\"fic-list-container\">\r\n                    <h3 className=\"lists-title\">Fan Fiction Lists</h3>\r\n                    <Link to=\"addficlist\" className=\"add-list\">+ ADD LIST</Link>\r\n                    {\r\n                        userFicLists &&\r\n                        userFicLists.length ?\r\n                            <Fragment>\r\n                                <div className=\"list-item-title\">\r\n                                    {\r\n                                        userFicLists.map((el, i) => <FicListCard className=\"list-card\" key={i} setIsFicListClicked={setIsFicListClicked} el={el} />)\r\n                                    }\r\n                                </div>\r\n                            </Fragment>\r\n                        :\r\n                        userFicLists &&\r\n                        userFicLists.length === 0 ?\r\n                            <Fragment>\r\n                                <p className=\"no-lists\">You haven't added any lists.</p>\r\n                            </Fragment>\r\n                        :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"eps-list-container\">\r\n                    <h3 className=\"lists-title\">Episodes Lists</h3>\r\n                    <Link to=\"addepslist\" className=\"add-list\">+ ADD LIST</Link>\r\n                    {\r\n                        userEpLists &&\r\n                        userEpLists.length ?\r\n                            <Fragment>\r\n                                <div className=\"list-item-title\">\r\n                                    {\r\n                                        userEpLists.map((el, i) => {\r\n                                            return (\r\n                                                <EpListCard className=\"list-card\" key={i} setIsEpListClicked={setIsEpListClicked} el={el} />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </Fragment>\r\n                        :\r\n                        userEpLists &&\r\n                        userEpLists.length === 0 ?\r\n                            <Fragment>\r\n                                <p className=\"no-lists\">You haven't added any lists.</p>\r\n                            </Fragment>\r\n                        :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/AddList.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddFicList = () => {\r\n    const history = useHistory();\r\n\r\n    const { userData, setUserData, token, setListInfo} = useContext(Context);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const listType = 'fanfiction';\r\n\r\n    const [statusAdded, setStatusAdded] = useState(false);\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleCreateList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const ficListData = {\r\n            listFandom,\r\n            listType,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postListData = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(ficListData)\r\n        };\r\n\r\n        const resp = await fetch('/ficlists', postListData);\r\n        const data = await resp.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setListInfo(data.ficList);\r\n            localStorage.setItem('list-info', JSON.stringify(data.ficList));\r\n            setStatusAdded(true);\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        statusAdded && history.push(\"/ficlist\");\r\n    });\r\n\r\n    return (\r\n        <div className={isMobile ? \"form-container mobile-width\" : \"form-container\"}>\r\n            <form className=\"list-form\" onSubmit={handleCreateList}>\r\n                <div className=\"h2-list\">\r\n                    <p>CREATE A LIST:</p>\r\n                    <h2>FAN FICTION</h2>\r\n                </div>\r\n                <label className=\"list-label\">Fandom *\r\n                    <input\r\n                        className=\"list-input\"\r\n                        type=\"text\"\r\n                        value={listFandom}\r\n                        required\r\n                        onChange={(e) => setListFandom(e.target.value)}\r\n                    />\r\n                </label>\r\n                {\r\n                    isButtonClicked ?\r\n                        <button className=\"list-btn\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /></button>\r\n                    :\r\n                        <button className=\"list-btn\" type=\"submit\" onClick={() => setIsButtonClicked(true)}>CONTINUE</button>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFicList;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/AddList.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddEpsList = () => {\r\n    const history = useHistory();\r\n\r\n    const { userData, setUserData, token, setListInfo} = useContext(Context);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const listType = 'episodes';\r\n\r\n    const [statusAdded, setStatusAdded] = useState(false);\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        setListInfo('');\r\n    }, []);\r\n\r\n    const handleCreateList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const epListData = {\r\n            listFandom,\r\n            listType,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postListData = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(epListData)\r\n        };\r\n\r\n        const resp = await fetch('/eplists', postListData);\r\n        const data = await resp.json();\r\n        console.log(data)\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            localStorage.setItem('list-info', JSON.stringify(data.epList));\r\n            setStatusAdded(true);\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        statusAdded && history.push(\"/eplist\");\r\n    });\r\n\r\n    return (\r\n        <div className={isMobile ? \"form-container mobile-width\" : \"form-container\"}>\r\n            <form className=\"list-form\" onSubmit={handleCreateList}>\r\n                <div className=\"h2-list\">\r\n                    <p>CREATE A LIST:</p>\r\n                    <h2>EPISODES</h2>\r\n                </div>\r\n                <label className=\"list-label\">Fandom *\r\n                    <input\r\n                        className=\"list-input\"\r\n                        type=\"text\"\r\n                        value={listFandom}\r\n                        required\r\n                        onChange={(e) => setListFandom(e.target.value)}\r\n                    />\r\n                </label>\r\n                {\r\n                    isButtonClicked ?\r\n                        <button className=\"list-btn\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /></button>\r\n                    :\r\n                        <button className=\"list-btn\" type=\"submit\" onClick={() => setIsButtonClicked(true)}>CONTINUE</button>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddEpsList;\r\n","import React, { useContext, useState, Fragment, useEffect } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport '../style/ItemCard.scss';\r\nimport Context from './Context';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faSpinner, faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst FicItemCard = ({ fic }) => {\r\n    const { listInfo, setListInfo, token } = useContext(Context);\r\n\r\n    const [ficInfo, setFicInfo] = useState('');\r\n    const { title, author, ship, genre, description, source, listId } = ficInfo;\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newAuthor, setNewAuthor] = useState('');\r\n    const [newShip, setNewShip] = useState('');\r\n    const [newGenre, setNewGenre] = useState('');\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [newSource, setNewSource] = useState('');\r\n\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    \r\n\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n    const [isListExpended, setIsListExpended] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setNewTitle(title);\r\n        setNewAuthor(author);\r\n        setNewShip(ship);\r\n        setNewGenre(genre);\r\n        setNewDescription(description);\r\n        setNewSource(source);\r\n    }, [ficInfo]);\r\n\r\n    useEffect(() => {\r\n        const fetchFic = async () => {\r\n            const options = {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-auth': token,\r\n              }\r\n            };\r\n    \r\n            const request1 = await fetch('/fanfics/' + fic, options);\r\n            const response1 = await request1.json();\r\n            if (response1.fic) {\r\n                setFicInfo(response1.fic);\r\n            };\r\n          };\r\n        fetchFic();\r\n    }, [listInfo, fic, token]);\r\n\r\n    const handleSubmitEdit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newInfo = {\r\n            title: newTitle === title ? title : newTitle,\r\n            author: newAuthor === author ? author : newAuthor,\r\n            ship: newShip === ship ? ship : newShip,\r\n            genre: newGenre === genre ? genre : newGenre,\r\n            description: newDescription === description ? description : newDescription,\r\n            source: newSource === source ? source : newSource,\r\n            listId\r\n        };\r\n\r\n        const newFicData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const request = await fetch('/fanfics/' + fic, newFicData);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setListInfo(response.ficList);\r\n            setEditInfo(false);\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    const deleteItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedItem = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/fanfics/' + fic, deletedItem);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setListInfo(response.ficList);\r\n            localStorage.setItem('list-info', JSON.stringify(listInfo));\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={isMobile ? \"item-cards-container-mobile\" : \"item-cards-container-desktop\"}>\r\n            {\r\n                editInfo ?\r\n                    <Fragment>\r\n                        <div className=\"item-edit-form\">\r\n                            <form onSubmit={handleSubmitEdit} className=\"item-edit-form\">\r\n                                <div className=\"ok-cancel\">\r\n                                    {\r\n                                        isButtonClicked ?\r\n                                            <button className=\"item-save-spinner\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                        :\r\n                                            <button type=\"submit\" className=\"item-save-button\" onClick={() => setIsButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                    }\r\n                                    <button className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} onClick={() => setEditInfo(false)}/></button>\r\n                                </div>\r\n                                <div className=\"form-fields\">\r\n                                    <label htmlFor=\"title\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"author\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" value={newAuthor} onChange={(e) => setNewAuthor(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"ship\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" value={newShip} onChange={(e) => setNewShip(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"genre\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" value={newGenre} onChange={(e) => setNewGenre(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"description\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" value={newDescription} onChange={(e) => setNewDescription(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"source\" className=\"item-edit-label\">\r\n                                        <input type=\"text\" value={newSource} onChange={(e) => setNewSource(e.target.value)} />\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                    :\r\n                    ficInfo && isMobile ?\r\n                        <Fragment>\r\n                            {\r\n                                isListExpended ?\r\n                                    <FontAwesomeIcon className=\"arrow\" title=\"collapse list\" icon={faChevronUp} onClick={(e) => setIsListExpended(false)} />\r\n                                :\r\n                                    <FontAwesomeIcon className=\"arrow\" title=\"expend list\" icon={faChevronDown} onClick={(e) => setIsListExpended(true)} />\r\n                            }\r\n                            <ul className=\"item-card\">\r\n                                {\r\n                                    isListExpended ?\r\n                                        <Fragment>\r\n                                            <li className=\"item\"><span className=\"category\">Title: </span><a href={ficInfo.source} target='_blank' rel=\"noopener noreferrer\">{ficInfo.title}</a></li>\r\n                                            <li className=\"item\"><span className=\"category\">Ship: </span>{ficInfo.ship}</li>\r\n                                            <li className=\"item\"><span className=\"category\">Author: </span>{ficInfo.author}</li>\r\n                                            {\r\n                                                ficInfo.genre ?\r\n                                                    <li className=\"item\"><span className=\"category\">Genre: </span>{ficInfo.genre}</li>\r\n                                                : null\r\n                                            }\r\n                                            {\r\n                                                ficInfo.description ?\r\n                                                    <li className=\"item\"><span className=\"category\">Description: </span>{ficInfo.description}</li>\r\n                                                : null\r\n                                            }\r\n                                        </Fragment>\r\n                                    :\r\n                                        <Fragment>\r\n                                            <li className=\"item\"><span className=\"category\">Title: </span><a href={ficInfo.source} target='_blank' rel=\"noopener noreferrer\">{ficInfo.title}</a></li>\r\n                                            <li className=\"item\"><span className=\"category\">Ship: </span>{ficInfo.ship}</li>\r\n                                        </Fragment>\r\n                                }\r\n                            </ul>\r\n                            <div className=\"item-edit-delete\">\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteItem(e) }\r\n                                }} />\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                    ficInfo && !isMobile ?\r\n                        <Fragment>\r\n                            <ul className=\"item-card\">\r\n                                <li className=\"item\"><span className=\"category\">Title: </span><a href={ficInfo.source} target='_blank' rel=\"noopener noreferrer\">{ficInfo.title}</a></li>\r\n                                <li className=\"item\"><span className=\"category\">Ship: </span>{ficInfo.ship}</li>\r\n                                <li className=\"item\"><span className=\"category\">Author: </span>{ficInfo.author}</li>\r\n                                {\r\n                                    ficInfo.genre ?\r\n                                        <li className=\"item\"><span className=\"category\">Genre: </span>{ficInfo.genre}</li>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    ficInfo.description ?\r\n                                        <li className=\"item\"><span className=\"category\">Description: </span>{ficInfo.description}</li>\r\n                                    : null\r\n                                }\r\n                            </ul>\r\n                            <div className=\"item-edit-delete\">\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteItem(e) }\r\n                                }} />\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FicItemCard;\r\n","import React, { useContext, Fragment, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/ListData.scss';\r\nimport FicItemCard from './FicItemCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faPlus, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst FicListData = () => {\r\n    const history = useHistory();\r\n    const { listInfo, setListInfo, userData, setUserData, token } = useContext(Context);\r\n\r\n    const [isListDeleted, setIsListDeleted] = useState(false);\r\n    const [editListInfo, setEditListInfo] = useState(false);\r\n    const [addToList, setAddToList] = useState(false);\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n    const [isAddButtonClicked, setIsAddButtonClicked] = useState(false);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [ship, setShip] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [source, setSource] = useState('');\r\n    const [listId, setListId] = useState('');\r\n    \r\n    const [newListFandom, setNewListFandom] = useState('');\r\n    \r\n    const hideHash = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        const list = localStorage.getItem('list-info');\r\n        if (list) {\r\n            setListInfo(JSON.parse(list));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        listInfo.ficList ? setListFandom(listInfo.ficList.listFandom) : setListFandom(listInfo.listFandom);\r\n        listInfo.ficList ? setNewListFandom(listInfo.ficList.listFandom) : setNewListFandom(listInfo.listFandom);\r\n        listInfo.ficList ? setListId(listInfo.ficList._id) : setListId(listInfo._id);\r\n    }, [listInfo.ficList, listInfo.listFandom, listInfo._id]);\r\n\r\n    const handleAddItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const ficData = {\r\n            title,\r\n            author,\r\n            ship,\r\n            genre,\r\n            description,\r\n            source,\r\n            listId,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postFicData = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(ficData)\r\n        };\r\n\r\n        const resp = await fetch('/fanfics', postFicData);\r\n        const data = await resp.json();\r\n        if (data.success) {\r\n            setListInfo(data.ficList);\r\n            localStorage.setItem('list-info', JSON.stringify(data.ficList));\r\n            setAddToList(false);\r\n            setIsAddButtonClicked(false);\r\n            setTitle('');\r\n            setAuthor('');\r\n            setShip('');\r\n            setGenre('');\r\n            setDescription('');\r\n            setSource('');\r\n        };\r\n    };\r\n\r\n    // EDIT LiST TITLE:\r\n    const handleSubmitEditList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newListInfo = {\r\n            listFandom: newListFandom === listFandom ? listFandom : newListFandom,\r\n            listType: \"fanfiction\",\r\n        };\r\n\r\n        const newFicListData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newListInfo)\r\n        };\r\n\r\n        const response = await fetch('/ficlists/' + listId, newFicListData);\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setListInfo(data.ficList);\r\n            setEditListInfo(false);\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    const deleteList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedList = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/ficlists/' + listId, deletedList);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setUserData(response.ficLists);\r\n            localStorage.removeItem('list-info');\r\n            setIsListDeleted(true);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        isListDeleted && history.push('/account');\r\n    });\r\n\r\n    return (\r\n        <div className={isMobile ? \"list-data-container mobile-width\" : \"list-data-container\"}>\r\n            <div className=\"list-details\">\r\n                {\r\n                    listInfo && editListInfo ?\r\n                        <Fragment>\r\n                            <div className=\"list-edit-form\">\r\n                                <form onSubmit={handleSubmitEditList} className=\"list-edit-form\">\r\n                                    <div className={isMobile ? \"ok-cancel-mobile\" : \"ok-cancel\"}>\r\n                                        {\r\n                                            isButtonClicked ?\r\n                                                <button className=\"list-save-spinner\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                            :\r\n                                                <button type=\"submit\" className=\"list-save-button\" onClick={() => setIsButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                        }\r\n                                        <button className=\"list-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditListInfo(false)}/></button>\r\n                                    </div>\r\n                                    <label htmlFor=\"listFandom\" className={isMobile ? \"margin list-edit-label\" : \"list-edit-label\"}>Fandom:\r\n                                        <input type=\"text\" value={newListFandom} onChange={(e) => setNewListFandom(e.target.value)} />\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                    listInfo ?\r\n                        <Fragment>\r\n                            <div className={isMobile ? \"list-edit-delete-mobile\" : \"list-edit-delete\"}>\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditListInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteList(e) }\r\n                                }} />\r\n                            </div>\r\n                            <h2 className={isMobile ? \"list-h2-mobile\" : \"list-h2\"}><span className=\"list-title\">Fan Fiction List:</span> {listFandom}</h2>\r\n                            <div className=\"add-to-list-top\">\r\n                                <HashLink onClick={hideHash} to=\"/ficlist#add-form\"><FontAwesomeIcon className=\"icon-add\" title=\"add\" icon={faPlus} onClick={() => setAddToList(true)}/></HashLink>\r\n                            </div>\r\n                        </Fragment>\r\n                        : null\r\n                }\r\n                <div className=\"list-items-container\">\r\n                    {\r\n                        listInfo.fics && (listInfo.fics.length > 0) ? \r\n                            listInfo.fics.map((fic, i) => {\r\n                                return (\r\n                                    <FicItemCard key={i} fic={fic} />\r\n                                )\r\n                            })\r\n                        :\r\n                            <p className=\"no-lists\">You haven't added any items.</p>\r\n                    }\r\n                </div>\r\n                <div className=\"add-form\" id=\"add-form\">\r\n                    {\r\n                        addToList ?\r\n                        <div className=\"item-form-container\">\r\n                            <form className={isMobile ? \"item-form item-form-mobile\" : \"item-form\"} onSubmit={handleAddItem}>\r\n                                <h2 className=\"h2-item\">ADD TO THE LIST</h2>\r\n                                <label className=\"item-label\">Title *\r\n                                    <input className=\"item-input\" type=\"text\" value={title} required\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Ship *\r\n                                    <input className=\"item-input\" type=\"text\" value={ship} required\r\n                                        onChange={(e) => setShip(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Author *\r\n                                    <input className=\"item-input\" type=\"text\" value={author} required\r\n                                        onChange={(e) => setAuthor(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Genre\r\n                                    <input className=\"item-input\" type=\"text\" value={genre}\r\n                                        onChange={(e) => setGenre(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Description\r\n                                    <input className=\"item-input\" type=\"text\" value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <label className=\"item-label\">Source *\r\n                                    <input className=\"item-input\" type=\"text\" value={source} required\r\n                                        onChange={(e) => setSource(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <h5 className=\"h5-item\">* Required Fields</h5>\r\n                                <div className=\"save-cancel-container\">\r\n                                    {\r\n                                        isAddButtonClicked ?\r\n                                            <button type=\"submit\" className=\"icon-spin\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                        :\r\n                                        <button type=\"submit\" className=\"save-btn\" onClick={() => setIsAddButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                    }\r\n                                    <button type=\"text\" className=\"cancel-btn\" onClick={() => setAddToList(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        :\r\n                        <div className=\"add-to-list\">\r\n                            <FontAwesomeIcon className=\"icon-add\" title=\"add\" icon={faPlus} onClick={() => setAddToList(true)}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n                        \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FicListData;\r\n","import React, { useContext, useState, Fragment, useEffect } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport '../style/ItemCard.scss';\r\nimport Context from './Context';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faSpinner, faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst EpItemCard = ({ ep }) => {\r\n    const { setListInfo, token } = useContext(Context);\r\n\r\n    const { listFandom, title, season, number, whyFave, source, listId } = ep;\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newSeason, setNewSeason] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [newWhyFave, setNewWhyFave] = useState('');\r\n    const [newSource, setNewSource] = useState('');\r\n\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n    const [isListExpended, setIsListExpended] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setNewTitle(title);\r\n        setNewSeason(season);\r\n        setNewNumber(number);\r\n        setNewWhyFave(whyFave);\r\n        setNewSource(source);\r\n    }, [ep])\r\n\r\n    const handleSubmitEdit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newInfo = {\r\n            listFandom: listFandom,\r\n            title: newTitle === '' ? title : newTitle,\r\n            season: newSeason === '' ? season : newSeason,\r\n            number: newNumber === '' ? number : newNumber,\r\n            whyFave: newWhyFave === '' ? whyFave : newWhyFave,\r\n            source: newSource === '' ? source : newSource,\r\n            listId\r\n        };\r\n\r\n        const newEpData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const response = await fetch('/episodes/' + ep._id, newEpData);\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setListInfo(data.epList);\r\n            setEditInfo(false);\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    const deleteItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedItem = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/episodes/' + ep._id, deletedItem);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setListInfo(response.epList);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={isMobile ? \"item-cards-container-mobile\" : \"item-cards-container-desktop\"}>\r\n            {\r\n                editInfo ?\r\n                    <Fragment>\r\n                        <div className=\"item-edit-form\">\r\n                            <form onSubmit={handleSubmitEdit} className=\"item-edit-form\">\r\n                                <div className=\"ok-cancel\">\r\n                                    {\r\n                                        isButtonClicked ?\r\n                                            <button className=\"item-save-spinner\" type=\"submit\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                        :\r\n                                            <button type=\"submit\" className=\"item-save-button\" onClick={() => setIsButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                    }\r\n                                    <button className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditInfo(false)}/></button>\r\n                                </div>\r\n                                <div className=\"form-fields\">\r\n                                    <label htmlFor=\"title\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"author\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" value={newSeason} onChange={(e) => setNewSeason(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"ship\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"genre\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" value={newWhyFave} onChange={(e) => setNewWhyFave(e.target.value)} />\r\n                                    </label>\r\n                                    <label htmlFor=\"source\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"text\" value={newSource} onChange={(e) => setNewSource(e.target.value)} />\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                    :\r\n                    ep && isMobile ?\r\n                        <Fragment>\r\n                            {\r\n                                isListExpended ?\r\n                                    <FontAwesomeIcon className=\"arrow\" title=\"collapse list\" icon={faChevronUp} onClick={(e) => setIsListExpended(false)} />\r\n                                :\r\n                                    <FontAwesomeIcon className=\"arrow\" title=\"expend list\" icon={faChevronDown} onClick={(e) => setIsListExpended(true)} />\r\n                            }\r\n                            <ul className=\"item-card\">\r\n                                {\r\n                                    isListExpended ?\r\n                                        <Fragment>\r\n                                            <li className=\"item\"><span className=\"category\">Title: </span>{ep.title}</li>\r\n                                            <li className=\"item\"><span className=\"category\">Season: </span>{ep.season}</li>\r\n                                            <li className=\"item\"><span className=\"category\">Number: </span>{ep.number}</li>\r\n                                            {\r\n                                                ep.whyFave ?\r\n                                                    <li className=\"item\"><span className=\"category\">Why is it a fave?: </span>{ep.whyFave}</li>\r\n                                                : null\r\n                                            }\r\n                                            {\r\n                                                ep.source ?\r\n                                                    <li className=\"item\"><span className=\"category\">Link to info: </span><a href={ep.source} target='_blank' rel=\"noopener noreferrer\">Link</a></li>\r\n                                                : null\r\n                                            }\r\n                                        </Fragment>\r\n                                    :\r\n                                        <Fragment>\r\n                                            <li className=\"item\"><span className=\"category\">Title: </span>{ep.title}</li>\r\n                                            <li className=\"item\">{ep.season} x {ep.number}</li>\r\n                                        </Fragment>\r\n                                }\r\n                            </ul>\r\n                            <div className=\"item-edit-delete\">\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteItem(e) }\r\n                                }} />\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                    ep && !isMobile ?\r\n                        <Fragment>\r\n                            <ul className=\"item-card\">\r\n                                <li className=\"item\"><span className=\"category\">Title: </span>{ep.title}</li>\r\n                                <li className=\"item\"><span className=\"category\">Season: </span>{ep.season}</li>\r\n                                <li className=\"item\"><span className=\"category\">Number: </span>{ep.number}</li>\r\n                                {\r\n                                    ep.whyFave ?\r\n                                        <li className=\"item\"><span className=\"category\">Why is it a fave?: </span>{ep.whyFave}</li>\r\n                                    : null\r\n                                }\r\n                                {\r\n                                    ep.source ?\r\n                                        <li className=\"item\"><span className=\"category\">Link to info: </span><a href={ep.source} target='_blank' rel=\"noopener noreferrer\">Link</a></li>\r\n                                    : null\r\n                                }\r\n                            </ul>\r\n                            <div className=\"item-edit-delete\">\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteItem(e) }\r\n                                }} />\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                        <div className=\"loading-details\">\r\n                            <FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" />\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpItemCard;\r\n","import React, { useContext, Fragment, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Context from './Context';\r\nimport '../style/ListData.scss';\r\nimport EpItemCard from './EpItemCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes, faPlus, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst EpListData = () => {\r\n    const history = useHistory();\r\n    const { listInfo, setListInfo, userData, setUserData, token } = useContext(Context);\r\n\r\n    const [isListDeleted, setIsListDeleted] = useState(false);\r\n    const [editListInfo, setEditListInfo] = useState(false);\r\n    const [addToList, setAddToList] = useState(false);\r\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n    const [isAddButtonClicked, setIsAddButtonClicked] = useState(false);\r\n\r\n    const [listFandom, setListFandom] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [season, setSeason] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [whyFave, setWhyFave] = useState('');\r\n    const [source, setSource] = useState('');\r\n    const [listId, setListId] = useState('');\r\n\r\n    const [newListFandom, setNewListFandom] = useState('');\r\n\r\n    const unsortedEps = [];\r\n    const [allListEps, setAllListEps] = useState([]);\r\n\r\n    const hideHash = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    \r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        const list = localStorage.getItem('list-info');\r\n        if (list) {\r\n            setListInfo(JSON.parse(list));\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        listInfo && listInfo.epList ? setListFandom(listInfo.epList.listFandom) : setListFandom(listInfo.listFandom);\r\n        listInfo && listInfo.epList ? setNewListFandom(listInfo.epList.listFandom) : setNewListFandom(listInfo.listFandom);\r\n        listInfo && listInfo.epList ? setListId(listInfo.epList._id) : setListId(listInfo._id);\r\n    }, [listInfo.epList, listInfo.listFandom, listInfo._id]);\r\n\r\n    useEffect(() => {\r\n        const fetchListEps = async () => {\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Accept': 'application/json',\r\n                  'x-auth': token\r\n                }\r\n            };\r\n\r\n            if (listInfo && listInfo.eps) {\r\n                listInfo.eps.map(async(epId) => {\r\n                    const request1 = await fetch('/episodes/' + epId, options);\r\n                    const response1 = await request1.json();\r\n                    response1.ep &&\r\n                    unsortedEps.push(response1.ep);\r\n                    setAllListEps(unsortedEps);\r\n                });\r\n            };\r\n        };\r\n        fetchListEps();\r\n    }, [listInfo]);\r\n\r\n    const compare = (a, b) => {\r\n        const seasonA = a.season;\r\n        const seasonB = b.season;\r\n        const numberA = a.number;\r\n        const numberB = b.number;\r\n        \r\n        let comparison = 0;\r\n        if (seasonA > seasonB) {\r\n            comparison = 1;\r\n        } else if (seasonA < seasonB) {\r\n            comparison = -1;\r\n        } else if (seasonA === seasonB && numberA > numberB) {\r\n            comparison = 1;\r\n        } else if (seasonA === seasonB && numberA < numberB) {\r\n            comparison = -1;\r\n        };\r\n        return comparison;\r\n    };\r\n\r\n    if (allListEps) {\r\n        allListEps.sort(compare);\r\n    };\r\n\r\n    const handleAddItem = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const epData = {\r\n            title,\r\n            season,\r\n            number,\r\n            whyFave,\r\n            source,\r\n            listId,\r\n            userId: userData._id\r\n        };\r\n\r\n        const postEpData = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'x-auth': token\r\n            },\r\n            body: JSON.stringify(epData)\r\n        };\r\n\r\n        const resp = await fetch('/episodes', postEpData);\r\n        const data = await resp.json();\r\n        if (data.success) {\r\n            setListInfo(data.epList);\r\n            localStorage.setItem('list-info', JSON.stringify(data.epList));\r\n            setAddToList(false);\r\n            setIsAddButtonClicked(false);\r\n            setTitle('');\r\n            setSeason('');\r\n            setNumber('');\r\n            setWhyFave('');\r\n            setSource('');\r\n        };\r\n    };\r\n\r\n    // EDIT LiST TITLE:\r\n    const handleSubmitEditList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const newListInfo = {\r\n            listFandom: newListFandom === listFandom ? listFandom : newListFandom,\r\n            listType: \"episodes\",\r\n        };\r\n\r\n        const newEpListData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newListInfo)\r\n        };\r\n\r\n        const response = await fetch('/eplists/' + listId, newEpListData);\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n            setUserData(data.user);\r\n            setListInfo(data.epList);\r\n            setEditListInfo(false);\r\n            setIsButtonClicked(false);\r\n        };\r\n    };\r\n\r\n    const deleteList = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletedList = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/eplists/' + listId, deletedList);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setUserData(response.user);\r\n            setListInfo(response.epList);\r\n            localStorage.removeItem('list-info');\r\n            setIsListDeleted(true);\r\n        };\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     getUserData();\r\n    // }, [listInfo]);\r\n\r\n    useEffect(() => {\r\n        isListDeleted && history.push('/account');\r\n    });\r\n\r\n    return (\r\n        <div className={isMobile ? \"list-data-container mobile-width\" : \"list-data-container\"}>\r\n            <div className=\"list-details\">\r\n                {\r\n                    listInfo && editListInfo ?\r\n                        <Fragment>\r\n                            <div className=\"list-edit-form\">\r\n                                <form onSubmit={handleSubmitEditList} className=\"list-edit-form\">\r\n                                    <div className={isMobile ? \"ok-cancel-mobile\" : \"ok-cancel\"}>\r\n                                        {\r\n                                            isButtonClicked ?\r\n                                                <button type=\"submit\" className=\"list-save-spinner\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                            :\r\n                                                <button type=\"submit\" className=\"list-save-button\" onClick={() => setIsButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                        }\r\n                                        <button className=\"list-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditListInfo(false)}/></button>\r\n                                    </div>\r\n                                    <label htmlFor=\"listFandom\" className={isMobile ? \"margin list-edit-label\" : \"list-edit-label\"}>Fandom:\r\n                                        <input type=\"text\" value={newListFandom} onChange={(e) => setNewListFandom(e.target.value)} />\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                    listInfo ?\r\n                        <Fragment>\r\n                            <div className={isMobile ? \"list-edit-delete-mobile\" : \"list-edit-delete\"}>\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditListInfo(true)} />\r\n                                <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                    if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteList(e) }\r\n                                }} />\r\n                            </div>\r\n                            <h2 className={isMobile ? \"list-h2-mobile\" : \"list-h2\"}><span className=\"list-title\">Episodes List:</span> {listFandom}</h2>\r\n                            <div className=\"add-to-list-top\">\r\n                                <HashLink onClick={hideHash} to=\"/eplist#add-form\"><FontAwesomeIcon className=\"icon-add\" title=\"add\" icon={faPlus} onClick={() => setAddToList(true)}/></HashLink>\r\n                            </div>\r\n                        </Fragment>\r\n                        : null\r\n                }\r\n                <div className=\"list-items-container\">\r\n                    {\r\n                        listInfo.eps && (listInfo.eps.length > 0) && allListEps ? allListEps.map((ep, i) => {\r\n                                return (\r\n                                <EpItemCard key={i} ep={ep} />\r\n                            )\r\n                        })\r\n                        :\r\n                            <p className=\"no-lists\">You haven't added any items.</p>\r\n                    }\r\n                </div>\r\n                <div className=\"add-form\" id=\"add-form\">\r\n                    {\r\n                        addToList ?\r\n                            <div className=\"item-form-container\">\r\n                                <form className={isMobile ? \"item-form item-form-mobile\" : \"item-form\"} onSubmit={handleAddItem}>\r\n                                    <h2 className=\"h2-item\">ADD TO THE LIST</h2>\r\n                                    <label className=\"item-label\">Title *\r\n                                        <input className=\"item-input\" type=\"text\" value={title} required placeholder=\"episode name...\"\r\n                                            onChange={(e) => setTitle(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Season *\r\n                                        <input className=\"item-input\" type=\"text\" value={season} required placeholder=\"season number...\"\r\n                                            onChange={(e) => setSeason(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Number *\r\n                                        <input className=\"item-input\" type=\"text\" value={number} required placeholder=\"episode number...\"\r\n                                            onChange={(e) => setNumber(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Why is it a fave?\r\n                                        <input className=\"item-input\" type=\"text\" value={whyFave} placeholder=\"to help you remember the ep...\"\r\n                                            onChange={(e) => setWhyFave(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"item-label\">Link to info\r\n                                        <input className=\"item-input\" type=\"text\" value={source} placeholder=\"imdb page for example...\"\r\n                                            onChange={(e) => setSource(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                    <h5 className=\"h5-item\">* Required Fields</h5>\r\n                                    <div className=\"save-cancel-container\">\r\n                                        {\r\n                                            isAddButtonClicked ?\r\n                                                <button type=\"submit\" className=\"icon-spin\"><FontAwesomeIcon icon={faSpinner} spin /></button>\r\n                                            :\r\n                                            <button type=\"submit\" className=\"save-btn\" onClick={() => setIsAddButtonClicked(true)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"approve\" icon={faCheck}/></button>\r\n                                        }\r\n                                        <button type=\"text\" className=\"cancel-btn\" onClick={() => setAddToList(false)}><FontAwesomeIcon className=\"icon-ch-ca\" title=\"cancel\" icon={faTimes} /></button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        :\r\n                            <div className=\"add-to-list\">\r\n                                <FontAwesomeIcon className=\"icon-add\" title=\"add\" icon={faPlus} onClick={() => setAddToList(true)}/>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n                        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EpListData;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../style/ForgotPassword.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCheckDouble } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [form, setForm] = useState(1);\r\n    const [email, setEmail] = useState('');\r\n\r\n    const sendPasswordResetEmail = async (e) => {\r\n        e.preventDefault();\r\n        setForm(2);\r\n\r\n        try {\r\n            const res = await axios.post('https://fanfavorite.herokuapp.com/reset_password/user/' + email, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            });\r\n            console.log(res);\r\n            if (res.data.success) {\r\n                setForm(3);\r\n            } else {\r\n                alert('Sorry, there was an issue sending the reset email. Please try again later.');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log('this is the error: ', err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"forgotpassword\">\r\n            {\r\n                form === 3 ?\r\n                    <p className=\"submitted\"><FontAwesomeIcon icon={faCheckDouble} className=\"check-icon\" />Email sent!</p>\r\n                :\r\n                form === 2 ?\r\n                    <div className=\"loading-message\">\r\n                        <p><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /> Sending email...</p>\r\n                    </div>\r\n                :\r\n                    <form className=\"reset-form\" onSubmit={sendPasswordResetEmail}>\r\n                        <label className=\"reset-pass-label\">\r\n                            <input\r\n                                className=\"reset-input\"\r\n                                type=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                placeholder=\"Account's email address\"\r\n                            />\r\n                        </label>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"reset-btn\" >SEND</button>\r\n                    </form>\r\n            }\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../style/UpdatePassword.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCheckDouble } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst UpdatePassword = ({ match }) => {\r\n    const SERVER_URI = \"https://fanfavorite.herokuapp.com\";\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [form, setForm] = useState(1);\r\n\r\n    const updatePassword = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { userId, resetToken } = match.params;\r\n        if (password === confirmPassword && password.length >= 6) {\r\n            setForm(2);\r\n            try {\r\n                const res = await axios.post(`${SERVER_URI}/reset_password/receive_new_password/${userId}/${resetToken}`, {\r\n                    password,\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    }\r\n                });\r\n                console.log(res);\r\n                if (res.status) {\r\n                    setForm(3);\r\n                } else {\r\n                    alert('Sorry, there was an issue updating your password. Please make sure it is longer than 6 characters or try again later.');\r\n                };\r\n    \r\n            } catch (err) {\r\n                console.log('this is the error: ', err)\r\n            };\r\n        } else {\r\n            window.alert('Password doesn\\'t match or is shorter than 6 characters');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"update-password\">\r\n            {\r\n                form === 3 ?\r\n                    <p className=\"submitted\"><FontAwesomeIcon icon={faCheckDouble} className=\"check-icon\" />Password updated! <br/>Please login with your new password.</p>\r\n                :\r\n                form === 2 ?\r\n                    <div className=\"loading-message\">\r\n                        <p><FontAwesomeIcon icon={faSpinner} spin className=\"spin-icon\" /> Updating password...</p>\r\n                    </div>\r\n                :\r\n                    <form className=\"update-form\" onSubmit={updatePassword}>\r\n                        <label className=\"update-pass-label\">\r\n                            <input\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                placeholder=\"New password...\"\r\n                            />\r\n                        </label>\r\n                        <label className=\"update-pass-label\">\r\n                            <input\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                placeholder=\"Retype password...\"\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\" className=\"update-btn\">SEND</button>\r\n                    </form>\r\n            }\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePassword;","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport '../style/AdminBoard.scss';\r\nimport Context from './Context';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AdminUserCard = ({ el, allUsers, setAllUsers }) => {\r\n    const { token } = useContext(Context);\r\n    \r\n    const { username, role, email, _id } = el;\r\n    const [editInfo, setEditInfo] = useState(false);\r\n    const [editPassword, setEditPassword] = useState(false);\r\n    const [newUsername, setNewUserName] = useState(username);\r\n    const [newRole, setNewRole] = useState(role);\r\n    const [newEmail, setNewEmail] = useState(email);\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const handleEditUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // const { username, role, email, _id } = el;\r\n\r\n        const newInfo = {\r\n            username: newUsername !== username ? newUsername : username,\r\n            role: newRole !== role ? newRole : role,\r\n            email: newEmail !== email ? newEmail : email,\r\n        };\r\n\r\n        const newUserData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const request = await fetch('/admin/userinfo/' + _id, newUserData);\r\n        const response = await request.json();\r\n        console.log(response)\r\n        if (response.success) {\r\n            setEditInfo(false);\r\n            setAllUsers(response.users)\r\n        };\r\n    };\r\n\r\n    const handleEditPassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { password, _id } = el;\r\n\r\n        const newInfo = {\r\n            password: newPassword === '' ? password : newPassword,\r\n        };\r\n\r\n        const newUserData = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth\": token\r\n            },\r\n            body: JSON.stringify(newInfo)\r\n        };\r\n\r\n        const request = await fetch('/admin/password/' + _id, newUserData);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setEditPassword(false);\r\n        };\r\n    };\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { _id } = el;\r\n\r\n        const deletedUser = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"x-auth\": token,\r\n            },\r\n        };\r\n\r\n        const request = await fetch('/admin/' + _id, deletedUser);\r\n        const response = await request.json();\r\n        if (response.success) {\r\n            setAllUsers(response.users);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"users-cards-container\">\r\n            {\r\n                editInfo ?\r\n                    <Fragment>\r\n                        <div className=\"item-edit-form\">\r\n                            <form onSubmit={handleEditUser} className=\"item-edit-form\">\r\n                                <label htmlFor=\"username\" className=\"item-edit-label item-edit-label-info\">\r\n                                    <input type=\"text\" value={newUsername} onChange={(e) => setNewUserName(e.target.value)} />\r\n                                </label>\r\n                                <label htmlFor=\"role\" className=\"item-edit-label item-edit-label-info\">\r\n                                    <input type=\"text\" placeholder={el.role} onChange={(e) => setNewRole(e.target.value)} />\r\n                                </label>\r\n                                <label htmlFor=\"email\" className=\"item-edit-label item-edit-label-info\">\r\n                                    <input type=\"email\" placeholder={el.email} onChange={(e) => setNewEmail(e.target.value)} />\r\n                                </label>\r\n                                <div className=\"ok-cancel\">\r\n                                    <button type=\"submit\" className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                    <button className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditInfo(false)}/></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                :\r\n                    editPassword ?\r\n                        <Fragment>\r\n                            <div className=\"item-edit-form\">\r\n                                <form onSubmit={handleEditPassword} className=\"item-edit-form\">\r\n                                    <label htmlFor=\"password\" className=\"item-edit-label item-edit-label-info\">\r\n                                        <input type=\"password\" placeholder=\"password\" onChange={(e) => setNewPassword(e.target.value)} />\r\n                                    </label>\r\n                                    <div className=\"ok-cancel\">\r\n                                        <button type=\"submit\" className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faCheck}/></button>\r\n                                        <button className=\"item-save-button\"><FontAwesomeIcon className=\"icon-ch-ca\" title=\"edit\" icon={faTimes} onClick={() => setEditInfo(false)}/></button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                    :\r\n                        <Fragment>\r\n                            <div className=\"item-card\">\r\n                                <div className=\"edit-info\">\r\n                                    <p className=\"item\"><span className=\"category\">Username: </span>{el.username}</p>\r\n                                    <p className=\"item\"><span className=\"category\">Role: </span>{el.role}</p>\r\n                                    <p className=\"item\"><span className=\"category\">Email: </span>{el.email}</p>\r\n                                    <div className=\"item-edit-delete\">\r\n                                        <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditInfo(true)} />\r\n                                        <FontAwesomeIcon className=\"icon-ed-de\" title=\"delete\" icon={faTrashAlt} onClick={(e) => {\r\n                                            if (window.confirm(`Are you sure you want to delete item from list?`)) { deleteUser(e) }\r\n                                        }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"edit-pass\">\r\n                                    <p className=\"item\"><span className=\"category\">Password: </span>...</p>\r\n                                    <div className=\"item-edit-delete\">\r\n                                        <FontAwesomeIcon className=\"icon-ed-de\" title=\"edit\" icon={faPencilAlt} onClick={() => setEditPassword(true)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n    // const { setListInfo } = useContext(Context);\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <button onClick={() => {\r\n    //             setListInfo(el);\r\n    //             localStorage.setItem('list-info', JSON.stringify(el));\r\n    //             setIsFicListClicked(true);\r\n    //         }} className=\"to-list\">{el.fandom}</button>\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default AdminUserCard;","import React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport Context from './Context';\r\nimport '../style/AdminBoard.scss';\r\nimport AdminUserCard from './AdminUserCard';\r\n\r\nconst AdminBoard = () => {\r\n    const { token } = useContext(Context);\r\n\r\n    const [allUsers, setAllUsers] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     getUsers();\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            const options = {\r\n              method: 'GET',\r\n              headers: {\r\n                'x-auth': token,\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n              }\r\n            };\r\n        \r\n            const response = await fetch('/admin', options);\r\n            const data = await response.json();\r\n            setAllUsers(data.users);\r\n          };\r\n        getUsers();\r\n    }, [token]);\r\n    \r\n    return (\r\n        <div className=\"admin-board\">\r\n            <div className=\"board-container\">\r\n                <h3 className=\"board-title\">USERS:</h3>\r\n                <div className=\"users-list\">\r\n                {\r\n                    allUsers &&\r\n                    allUsers.length ?\r\n                        <Fragment>\r\n                            {\r\n                                allUsers.map((el, i) => <AdminUserCard className=\"user-card\" key={i} el={el} allUsers={allUsers} setAllUsers={setAllUsers} />)\r\n                            }\r\n                        </Fragment>\r\n                    : null\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminBoard;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport '../style/About.scss';\r\n\r\nconst About = () => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n    \r\n    const scrollTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const hideHash = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"about-container\">\r\n            <div className=\"theme-list\">\r\n                <ul>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#whatisfanfavorite\">What is FanFavorite?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#howtocreatelists\">How to create lists?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#howtocreateaccount\">How to create an account?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#editpersonalinfo\">Can I edit my personal info?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#deleteaccount\">What happens when I delete my account?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#timetostart\">Why does it take time to initially load?</HashLink></li>\r\n                    <li><HashLink onClick={hideHash} className=\"side-link\" to=\"/about#suggestions\">Can I suggest changes for FanFavorite?</HashLink></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"questions-container\">\r\n                <div className=\"questions-headline\">\r\n                    <h3>FANFAVORITE IS HERE</h3>\r\n                    <h3>FOR ANY QUESTIONS</h3>\r\n                    <h3>YOU MIGHT HAVE</h3>\r\n                    <h5>IF YOU CAN'T FIND IT HERE, FEEL FREE TO MAKE A DIRECT \r\n                        <HashLink to=\"#footer\" className=\"contact\" scroll={el => el.scrollIntoView({ behavior: 'smooth', block: 'start' })} onClick={hideHash}>\r\n                            CONTACT</HashLink></h5>\r\n                </div>\r\n                <div className=\"questions\">\r\n                    <div id=\"whatisfanfavorite\">\r\n                        <h4>WHAT IS FANFAVORITE?</h4>\r\n                        <p>\r\n                            FanFavorite is a web app created by and for fans who would like to keep all of their favorite fan fiction and episodes in one place, so they're never lost. It started as a small idea for a project to be presented in a portfolio, and grew to be FanFavorite.\r\n                        </p>\r\n                        <p>\r\n                            With FanFavorite you wont need to save endless links in your browser. Now it is possible to keep them all in one list, with exact description to make it easy for you to remember them.\r\n                        </p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"howtocreatelists\">\r\n                        <h4>HOW TO CREATE A LIST?</h4>\r\n                        <ol>\r\n                            <li>1. <Link to=\"signup\">Sign up</Link> with your own account (see next question).</li>\r\n                            <li>2. Click on ADD LIST in the desired category (fan fiction or episodes).</li>\r\n                            <li>3. Give the list the name of the fandom it belongs to.</li>\r\n                            <li>3. Once list is created, use the form to add items to it.</li>\r\n                            <li>4. You can edit or delete the items and the lists (the info will be permanently changed/deleted).</li>\r\n                            <li>Once you go back to your account's page, you'll be able to see your lists.</li>\r\n                        </ol>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"howtocreateaccount\">\r\n                        <h4>HOW TO CREATE AN ACCOUNT?</h4>\r\n                        <ol>\r\n                            <li>1. Click on the top navigation bar on 'Sign up'.</li>\r\n                            <li>2. Fill in all the required fields.</li>\r\n                            <li>3. Click on 'GO'.</li>\r\n                            <li>You can edit your info from your account.</li>\r\n                        </ol>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"editpersonalinfo\">\r\n                        <h4>CAN I EDIT MY PERSONAL INFO?</h4>\r\n                        <p>You can edit your username and password. This is how:</p>\r\n                        <ol>\r\n                            <li>1. Once you're logged in, make sure you're on your account's page.</li>\r\n                            <li>2. In the top toolbar click 'EDIT USERNAME' or 'EDIT PASSWORD'.</li>\r\n                            <li>3. Click on the check mark to approve, or on the 'x' to cancel editing.</li>\r\n                            <li><strong>* The 'DELETE ACCOUNT' and 'SIGN OUT' buttons are also in the top toolbar.</strong></li>\r\n                        </ol>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"deleteaccount\">\r\n                        <h4>WHAT HAPPENS WHEN I DELETE MY ACCOUNT?</h4>\r\n                        <p>Deleting your account will permanently delete all of your info and lists, so please make sure it's really what you want.</p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"timetostart\">\r\n                        <h4>WHY DOES IT TAKE TIME FOR THE WEB APP TO INITIALLY LOAD?</h4>\r\n                        <p>The app is currently hosted on a free server. Without going into technical details - the server needs about 30 seconds to 'wake up'. Afterwards, it will work without delays.</p>\r\n                        <p>Please note that the 'waking up' will happen each time after a certain amount of inactive time.</p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                    <div id=\"suggestions\">\r\n                        <h4>CAN I SUGGEST CHANGES FOR FANFAVORITE?</h4>\r\n                        <p>Of course! This web app is for you.</p>\r\n                        <p>If you think of a way to improve it, please let me know.</p>\r\n                        <p>It would also be much appreciated if you notify me about any bugs you might find.</p>\r\n                        <h6 onClick={scrollTop}>Back to top</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"../style/App.scss\";\r\nimport Context from \"./Context\";\r\nimport NavBar from \"./NavBar\";\r\nimport Footer from \"./Footer\";\r\nimport Landing from \"./Landing\";\r\nimport SignUp from \"./SignUp\";\r\nimport Account from \"./Account\";\r\nimport AddFicList from \"./AddFicList\";\r\nimport AddEpsList from \"./AddEpsList\";\r\nimport FicListData from \"./FicListData.js\"\r\nimport EpListData from \"./EpListData.js\"\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport UpdatePassword from \"./UpdatePassword\";\r\nimport AdminBoard from \"./AdminBoard\";\r\nimport About from \"./About\";\r\n\r\nconst App = () => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [userFicLists, setUserFicLists] = useState('');\r\n  const [userEpLists, setUserEpLists] = useState('');\r\n  const [listInfo, setListInfo] = useState('');\r\n  const [userData, setUserData] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  \r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // FETCH USER INFO:\r\n  const getUserData = async () => {\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-auth': token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    };\r\n\r\n    const response = await fetch('/users', options);\r\n    const data = await response.json();\r\n    console.log(data)\r\n    if (data.success) {\r\n      setUserData(data.user);\r\n      setUserEpLists(data.user.epsLists);\r\n      setUserFicLists(data.user.ficLists);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUserData();\r\n      setLoggedIn(true);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n        getUserData();\r\n    }, [listInfo]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Context.Provider value={{ getUserData, userFicLists, setUserFicLists, userEpLists, setUserEpLists, listInfo, setListInfo, userData, setUserData, token, setToken, isAdmin, setIsAdmin, loggedIn, setLoggedIn }}>\r\n        <HashRouter>\r\n          <NavBar />\r\n          <Switch>\r\n            {\r\n              loggedIn ?\r\n                <Route path=\"/\" exact component={Account} />\r\n              :\r\n                <Route path=\"/\" exact component={Landing} />\r\n            }\r\n            <Route  path=\"/account\" exact component={Account} /> \r\n            <Route path=\"/signup\" exact component={SignUp} />\r\n            <Route path=\"/admin\" exact component={AdminBoard} />\r\n            <Route path=\"/addficlist\" exact component={AddFicList} />\r\n            <Route path=\"/addepslist\" exact component={AddEpsList} />\r\n            <Route path=\"/ficlist\" exact component={FicListData} />\r\n            <Route path=\"/eplist\" exact component={EpListData} />\r\n            <Route path=\"/about\" exact component={About} />\r\n            <Route path=\"/reset_password\" exact component={ForgotPassword} />\r\n            <Route path=\"/password/reset/:userId/:resetToken\" exact component={UpdatePassword} />\r\n          </Switch>\r\n          <div id=\"footer\">\r\n            <Footer />\r\n          </div>\r\n        </HashRouter>\r\n      </Context.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","\nimport React from \"react\"\nimport App from \"./components/App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}